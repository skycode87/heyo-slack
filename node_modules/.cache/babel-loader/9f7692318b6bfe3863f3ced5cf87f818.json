{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { apiRoutes } from \"../../../constants/routes\";\nimport useFetch from \"../../shared/hooks/useFetch\";\nimport { getUserId } from \"../../../utils/localStorage\";\n\nconst useGuests = (userId = null) => {\n  _s();\n\n  const [guests, setGuests] = useState([]);\n  const [filters, setFilters] = useState({\n    role: \"\",\n    email: \"\",\n    nombre: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    sord: \"asc\",\n    sidx: \"email\",\n    userId,\n    rootId: getUserId()\n  });\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 100,\n    total: 0\n  });\n  const {\n    data,\n    loading,\n    refetch\n  } = useFetch(apiRoutes.GUESTS.LOAD_GRID, \"POST\", new URLSearchParams({ ...filters,\n    page: pagination.current,\n    rows: pagination.pageSize\n  }));\n  useEffect(() => {\n    if (data) {\n      setGuests(data === null || data === void 0 ? void 0 : data.rows);\n      setPagination({ ...pagination,\n        current: parseInt(data === null || data === void 0 ? void 0 : data.page),\n        total: parseInt(data === null || data === void 0 ? void 0 : data.records)\n      });\n    }\n  }, [data]);\n  return {\n    guests,\n    filters,\n    setFilters,\n    pagination,\n    setPagination,\n    loading,\n    refetch\n  };\n};\n\n_s(useGuests, \"m36ZnrhGcu/j33ogC0pOGxC8204=\", false, function () {\n  return [useFetch];\n});\n\nexport default useGuests;","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/guest/hooks/useGuests.js"],"names":["useState","useEffect","apiRoutes","useFetch","getUserId","useGuests","userId","guests","setGuests","filters","setFilters","role","email","nombre","firstname","lastname","sord","sidx","rootId","pagination","setPagination","current","pageSize","total","data","loading","refetch","GUESTS","LOAD_GRID","URLSearchParams","page","rows","parseInt","records"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,SAAT,QAA0B,6BAA1B;;AAEA,MAAMC,SAAS,GAAG,CAACC,MAAM,GAAG,IAAV,KAAmB;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC;AACrCW,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,MAAM,EAAE,EAH6B;AAIrCC,IAAAA,SAAS,EAAE,EAJ0B;AAKrCC,IAAAA,QAAQ,EAAE,EAL2B;AAMrCC,IAAAA,IAAI,EAAE,KAN+B;AAOrCC,IAAAA,IAAI,EAAE,OAP+B;AAQrCX,IAAAA,MARqC;AASrCY,IAAAA,MAAM,EAAEd,SAAS;AAToB,GAAD,CAAtC;AAWA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC;AAAEqB,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GAAD,CAA5C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BvB,QAAQ,CACzCD,SAAS,CAACyB,MAAV,CAAiBC,SADwB,EAEzC,MAFyC,EAGzC,IAAIC,eAAJ,CAAoB,EAAE,GAAGpB,OAAL;AAAcqB,IAAAA,IAAI,EAAEX,UAAU,CAACE,OAA/B;AAAwCU,IAAAA,IAAI,EAAEZ,UAAU,CAACG;AAAzD,GAApB,CAHyC,CAA3C;AAMArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,IAAJ,EAAU;AACRhB,MAAAA,SAAS,CAACgB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,IAAP,CAAT;AACAX,MAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBE,QAAAA,OAAO,EAAEW,QAAQ,CAACR,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEM,IAAP,CAAlC;AAAgDP,QAAAA,KAAK,EAAES,QAAQ,CAACR,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAES,OAAP;AAA/D,OAAD,CAAb;AACD;AACF,GALQ,EAKN,CAACT,IAAD,CALM,CAAT;AAOA,SAAO;AAAEjB,IAAAA,MAAF;AAAUE,IAAAA,OAAV;AAAmBC,IAAAA,UAAnB;AAA+BS,IAAAA,UAA/B;AAA2CC,IAAAA,aAA3C;AAA0DK,IAAAA,OAA1D;AAAmEC,IAAAA;AAAnE,GAAP;AACD,CA5BD;;GAAMrB,S;UAc+BF,Q;;;AAgBrC,eAAeE,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { apiRoutes } from \"../../../constants/routes\";\nimport useFetch from \"../../shared/hooks/useFetch\";\nimport { getUserId } from \"../../../utils/localStorage\";\n\nconst useGuests = (userId = null) => {\n  const [guests, setGuests] = useState([]);\n  const [filters, setFilters] = useState({\n    role: \"\",\n    email: \"\",\n    nombre: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    sord: \"asc\",\n    sidx: \"email\",\n    userId,\n    rootId: getUserId(),\n  });\n  const [pagination, setPagination] = useState({ current: 1, pageSize: 100, total: 0 });\n  const { data, loading, refetch } = useFetch(\n    apiRoutes.GUESTS.LOAD_GRID,\n    \"POST\",\n    new URLSearchParams({ ...filters, page: pagination.current, rows: pagination.pageSize })\n  );\n\n  useEffect(() => {\n    if (data) {\n      setGuests(data?.rows);\n      setPagination({ ...pagination, current: parseInt(data?.page), total: parseInt(data?.records) });\n    }\n  }, [data]);\n\n  return { guests, filters, setFilters, pagination, setPagination, loading, refetch };\n};\n\nexport default useGuests;\n"]},"metadata":{},"sourceType":"module"}