{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/shared/components/ActionBar/ActionBar.js\",\n    _s = $RefreshSig$();\n\nimport { CloseCircleOutlined, SearchOutlined, IdcardOutlined, TableOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Row, Space } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport globalStyles from \"../../css/global.module.css\";\nimport useShortcut from \"../../hooks/useShortcut\";\nimport useTranslate from \"../../hooks/useTranslate\";\nimport styles from \"./ActionBar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ActionBar = ({\n  children,\n  options,\n  filters,\n  setContainerMode,\n  containerMode,\n  handleNewLinkModal,\n  extraButtons = false,\n  conditionalButton\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslate();\n  const [searching, setSearching] = useState(false);\n\n  const handleSearch = () => setSearching(!searching);\n\n  useShortcut([\"s\"], () => setSearching(true), [searching]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [searching && children ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${globalStyles[\"padding-xs\"]} ${styles[\"action-bar-content\"]}`,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        justify: \"space-between\",\n        align: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n        onClick: handleSearch,\n        className: styles[\"action-bar-close-close-button\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n      className: `${globalStyles[\"padding-xs\"]} ${styles[\"action-bar\"]}`,\n      justify: \"space-around\",\n      align: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: options && (options === null || options === void 0 ? void 0 : options.actions) && /*#__PURE__*/_jsxDEV(options.actions, {\n          filters: filters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        className: globalStyles[\"text-align-right\"],\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [children && !searching ? /*#__PURE__*/_jsxDEV(Button, {\n            className: styles[\"action-bar-button\"],\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 69\n            }, this),\n            onClick: handleSearch,\n            children: t[\"common.search\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this) : null, containerMode === \"table\" && /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              background: \"#1890ff\"\n            },\n            onClick: () => setContainerMode(\"cards\"),\n            shape: \"square\",\n            icon: /*#__PURE__*/_jsxDEV(IdcardOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 23\n            }, this),\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), containerMode === \"cards\" && /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              background: \"#ff4d4f\"\n            },\n            onClick: () => setContainerMode(\"table\"),\n            shape: \"square\",\n            icon: /*#__PURE__*/_jsxDEV(TableOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }, this),\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), extraButtons && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [conditionalButton === \"TEXT\" && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleNewLinkModal(\"TEXT\"),\n              shape: \"square\",\n              icon: /*#__PURE__*/_jsxDEV(TableOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 27\n              }, this),\n              size: \"large\",\n              children: \"Add Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), conditionalButton === \"IMAGE\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleNewLinkModal(\"IMAGE\"),\n                shape: \"square\",\n                icon: /*#__PURE__*/_jsxDEV(TableOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 29\n                }, this),\n                size: \"large\",\n                children: \"Add Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleNewLinkModal(\"URL_IMAGE\"),\n                shape: \"square\",\n                icon: /*#__PURE__*/_jsxDEV(TableOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 29\n                }, this),\n                size: \"large\",\n                children: \"Add External Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true), conditionalButton === \"HTML\" && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleNewLinkModal(\"HTML\"),\n              shape: \"square\",\n              icon: /*#__PURE__*/_jsxDEV(TableOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 27\n              }, this),\n              size: \"large\",\n              children: \"Add Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), conditionalButton === \"LINK\" && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleNewLinkModal(\"LINK\"),\n              shape: \"square\",\n              icon: /*#__PURE__*/_jsxDEV(TableOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 27\n              }, this),\n              size: \"large\",\n              children: \"Add Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ActionBar, \"aWi/2f1YGtZO8Ihwe3iTYoWrIdI=\", false, function () {\n  return [useTranslate, useShortcut];\n});\n\n_c = ActionBar;\nActionBar.propTypes = {\n  children: PropTypes.node,\n  options: PropTypes.object,\n  filters: PropTypes.object,\n  setContainerMode: PropTypes.func,\n  containerMode: PropTypes.string,\n  handleNewLinkModal: PropTypes.func,\n  extraButtons: PropTypes.bool\n};\nexport default ActionBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActionBar\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/shared/components/ActionBar/ActionBar.js"],"names":["CloseCircleOutlined","SearchOutlined","IdcardOutlined","TableOutlined","Button","Col","Row","Space","PropTypes","useState","globalStyles","useShortcut","useTranslate","styles","ActionBar","children","options","filters","setContainerMode","containerMode","handleNewLinkModal","extraButtons","conditionalButton","t","searching","setSearching","handleSearch","actions","background","propTypes","node","object","func","string","bool"],"mappings":"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","sourcesContent":["import { CloseCircleOutlined, SearchOutlined, IdcardOutlined, TableOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Row, Space } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport globalStyles from \"../../css/global.module.css\";\nimport useShortcut from \"../../hooks/useShortcut\";\nimport useTranslate from \"../../hooks/useTranslate\";\nimport styles from \"./ActionBar.module.css\";\n\nconst ActionBar = ({\n  children,\n  options,\n  filters,\n  setContainerMode,\n  containerMode,\n  handleNewLinkModal,\n  extraButtons = false,\n  conditionalButton,\n}) => {\n  const { t } = useTranslate();\n  const [searching, setSearching] = useState(false);\n  const handleSearch = () => setSearching(!searching);\n\n  useShortcut([\"s\"], () => setSearching(true), [searching]);\n\n  return (\n    <>\n      {searching && children ? (\n        <div className={`${globalStyles[\"padding-xs\"]} ${styles[\"action-bar-content\"]}`}>\n          <Row justify=\"space-between\" align=\"middle\">\n            <Col span={24}>{children}</Col>\n          </Row>\n          <CloseCircleOutlined onClick={handleSearch} className={styles[\"action-bar-close-close-button\"]} />\n        </div>\n      ) : null}\n      <Row className={`${globalStyles[\"padding-xs\"]} ${styles[\"action-bar\"]}`} justify=\"space-around\" align=\"middle\">\n        <Col span={12}>{options && options?.actions && <options.actions filters={filters} />}</Col>\n        <Col span={12} className={globalStyles[\"text-align-right\"]}>\n          <Space>\n            {children && !searching ? (\n              <Button className={styles[\"action-bar-button\"]} icon={<SearchOutlined />} onClick={handleSearch}>\n                {t[\"common.search\"]}\n              </Button>\n            ) : null}\n            {containerMode === \"table\" && (\n              <Button\n                style={{ background: \"#1890ff\" }}\n                onClick={() => setContainerMode(\"cards\")}\n                shape=\"square\"\n                icon={<IdcardOutlined />}\n                size=\"large\"\n              />\n            )}\n            {containerMode === \"cards\" && (\n              <Button\n                style={{ background: \"#ff4d4f\" }}\n                onClick={() => setContainerMode(\"table\")}\n                shape=\"square\"\n                icon={<TableOutlined />}\n                size=\"large\"\n              />\n            )}\n            {extraButtons && (\n              <>\n                {conditionalButton === \"TEXT\" && (\n                  <Button\n                    onClick={() => handleNewLinkModal(\"TEXT\")}\n                    shape=\"square\"\n                    icon={<TableOutlined />}\n                    size=\"large\"\n                  >\n                    Add Text\n                  </Button>\n                )}\n                {conditionalButton === \"IMAGE\" && (\n                  <>\n                    <Button\n                      onClick={() => handleNewLinkModal(\"IMAGE\")}\n                      shape=\"square\"\n                      icon={<TableOutlined />}\n                      size=\"large\"\n                    >\n                      Add Image\n                    </Button>\n                    <Button\n                      onClick={() => handleNewLinkModal(\"URL_IMAGE\")}\n                      shape=\"square\"\n                      icon={<TableOutlined />}\n                      size=\"large\"\n                    >\n                      Add External Image\n                    </Button>{\" \"}\n                  </>\n                )}\n\n                {conditionalButton === \"HTML\" && (\n                  <Button\n                    onClick={() => handleNewLinkModal(\"HTML\")}\n                    shape=\"square\"\n                    icon={<TableOutlined />}\n                    size=\"large\"\n                  >\n                    Add Code\n                  </Button>\n                )}\n                {conditionalButton === \"LINK\" && (\n                  <Button\n                    onClick={() => handleNewLinkModal(\"LINK\")}\n                    shape=\"square\"\n                    icon={<TableOutlined />}\n                    size=\"large\"\n                  >\n                    Add Link\n                  </Button>\n                )}\n              </>\n            )}\n          </Space>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nActionBar.propTypes = {\n  children: PropTypes.node,\n  options: PropTypes.object,\n  filters: PropTypes.object,\n  setContainerMode: PropTypes.func,\n  containerMode: PropTypes.string,\n  handleNewLinkModal: PropTypes.func,\n  extraButtons: PropTypes.bool,\n};\n\nexport default ActionBar;\n"]},"metadata":{},"sourceType":"module"}