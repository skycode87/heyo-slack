{"ast":null,"code":"import { setLocalStorage } from \"../utils/localStorage\";\nconst dataInicial = {\n  request: false,\n  currentSession: {}\n};\nconst CURRENT_SESSION = \"CURRENT_SESSION\";\nexport default function userReducer(state = dataInicial, action) {\n  switch (action.type) {\n    case CURRENT_SESSION:\n      return { ...state,\n        currentSession: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n}\nexport const setSession = payload => async (dispatch, getState) => {\n  setLocalStorage(payload);\n  dispatch({\n    type: CURRENT_SESSION,\n    payload\n  });\n};\nexport const setSessionRedux = payload => async (dispatch, getState) => {\n  setLocalStorage(payload);\n  dispatch({\n    type: CURRENT_SESSION,\n    payload\n  });\n};","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/redux/session.js"],"names":["setLocalStorage","dataInicial","request","currentSession","CURRENT_SESSION","userReducer","state","action","type","payload","setSession","dispatch","getState","setSessionRedux"],"mappings":"AAAA,SAASA,eAAT,QAAgC,uBAAhC;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,OAAO,EAAE,KADS;AAElBC,EAAAA,cAAc,EAAE;AAFE,CAApB;AAKA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGL,WAA7B,EAA0CM,MAA1C,EAAkD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,eAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYH,QAAAA,cAAc,EAAEI,MAAM,CAACE;AAAnC,OAAP;;AAEF;AACE,aAAO,EAAE,GAAGH;AAAL,OAAP;AALJ;AAOD;AAED,OAAO,MAAMI,UAAU,GAAID,OAAD,IAAa,OAAOE,QAAP,EAAiBC,QAAjB,KAA8B;AACnEZ,EAAAA,eAAe,CAACS,OAAD,CAAf;AACAE,EAAAA,QAAQ,CAAC;AACPH,IAAAA,IAAI,EAAEJ,eADC;AAEPK,IAAAA;AAFO,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMI,eAAe,GAAIJ,OAAD,IAAa,OAAOE,QAAP,EAAiBC,QAAjB,KAA8B;AACxEZ,EAAAA,eAAe,CAACS,OAAD,CAAf;AACAE,EAAAA,QAAQ,CAAC;AACPH,IAAAA,IAAI,EAAEJ,eADC;AAEPK,IAAAA;AAFO,GAAD,CAAR;AAID,CANM","sourcesContent":["import { setLocalStorage } from \"../utils/localStorage\";\n\nconst dataInicial = {\n  request: false,\n  currentSession: {},\n};\n\nconst CURRENT_SESSION = \"CURRENT_SESSION\";\n\nexport default function userReducer(state = dataInicial, action) {\n  switch (action.type) {\n    case CURRENT_SESSION:\n      return { ...state, currentSession: action.payload };\n\n    default:\n      return { ...state };\n  }\n}\n\nexport const setSession = (payload) => async (dispatch, getState) => {\n  setLocalStorage(payload);\n  dispatch({\n    type: CURRENT_SESSION,\n    payload,\n  });\n};\n\nexport const setSessionRedux = (payload) => async (dispatch, getState) => {\n  setLocalStorage(payload);\n  dispatch({\n    type: CURRENT_SESSION,\n    payload,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}