{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/trans/components/TranssTable.js\";\nimport { useState } from \"react\";\nimport { Table, Space, Tag } from \"antd\";\nimport { CheckCircleTwoTone, RollbackOutlined, EditOutlined, DeleteOutlined, BarsOutlined } from \"@ant-design/icons\";\nimport { withRouter } from \"react-router-dom\";\nimport BaseTable from \"../../shared/components/BasicTable\";\nimport ActionUserTable from \"./ActionsTransTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PlansTable = ({\n  selectedUser,\n  setSelectedUser,\n  setPage,\n  history,\n  transs,\n  refetch,\n  initialValues,\n  handleDetails,\n  handleEdit,\n  userId,\n  handleArchived,\n  handleReverse,\n  openDetailsTransModal,\n  t,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(BaseTable, { ...restProps,\n    dataSource: transs,\n    refetch: refetch,\n    children: [/*#__PURE__*/_jsxDEV(Table.Column, {\n      width: \"120px\",\n      title: t(\"actions\"),\n      dataIndex: \"actions\",\n      render: (_, data) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-column\",\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#!\",\n            onClick: () => handleEdit(data),\n            role: \"button\",\n            tabIndex: 0,\n            children: [/*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#!\",\n            onClick: () => handleArchived(data),\n            role: \"button\",\n            tabIndex: 0,\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#!\",\n            onClick: () => handleReverse(data),\n            role: \"button\",\n            tabIndex: 0,\n            children: data.type === \"inbound\" && /*#__PURE__*/_jsxDEV(RollbackOutlined, {\n              style: {\n                color: \"#fa541c\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#!\",\n            onClick: () => handleDetails(data),\n            role: \"button\",\n            tabIndex: 0,\n            children: /*#__PURE__*/_jsxDEV(BarsOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, \"actions\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n      align: \"center\",\n      width: \"10%\",\n      title: \"code\",\n      dataIndex: \"code\",\n      sorter: true\n    }, \"code\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n      title: t(\"fullname\"),\n      dataIndex: \"fullname\",\n      sorter: true,\n      render: (text, row) => `${row.fullname} ${row.email}`\n    }, \"fullname\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Table.Column, {\n      title: t(\"description\"),\n      dataIndex: \"description\",\n      sorter: true,\n      render: (text, row) => `${row.description}`\n    }, \"description\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Table.Column, {\n      align: \"right\",\n      title: t(\"amount\"),\n      dataIndex: \"amount\",\n      sorter: true,\n      render: text => `$ ${text}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }, \"amount\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n      align: \"right\",\n      width: \"10%\",\n      title: t(\"pending\"),\n      dataIndex: \"pending\",\n      sorter: true,\n      render: text => `$ ${text}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }, \"pending\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n      align: \"right\",\n      width: \"10%\",\n      title: t(\"total\"),\n      dataIndex: \"total\",\n      sorter: true,\n      render: text => `$ ${text}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }, \"total\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n      align: \"center\",\n      title: t(\"description\"),\n      dataIndex: \"type\",\n      sorter: true,\n      render: text => {\n        if (text === \"inbound\") {\n          return /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"green\",\n            children: t(\"incomeMoney\")\n          }, \"inbound\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"volcano\",\n          children: t(\"out\")\n        }, \"outbound\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this);\n      }\n    }, \"type\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table.Column, {\n      title: t(\"status\"),\n      align: \"center\",\n      dataIndex: \"status\",\n      sorter: true,\n      render: text => {\n        if (text === \"Completada\") {\n          return /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"green\",\n            children: t(\"completed\")\n          }, t(\"completed\"), false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"volcano\",\n          children: t(\"pending\")\n        }, t(\"pending\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this);\n      }\n    }, \"status\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false);\n\n_c = PlansTable;\nexport default _c2 = withRouter(PlansTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlansTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/trans/components/TranssTable.js"],"names":["useState","Table","Space","Tag","CheckCircleTwoTone","RollbackOutlined","EditOutlined","DeleteOutlined","BarsOutlined","withRouter","BaseTable","ActionUserTable","PlansTable","selectedUser","setSelectedUser","setPage","history","transs","refetch","initialValues","handleDetails","handleEdit","userId","handleArchived","handleReverse","openDetailsTransModal","t","restProps","_","data","type","color","text","row","fullname","email","description","replace"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,GAAvB,QAAkC,MAAlC;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,YAA/C,EAA6DC,cAA7D,EAA6EC,YAA7E,QAAiG,mBAAjG;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,YADkB;AAElBC,EAAAA,eAFkB;AAGlBC,EAAAA,OAHkB;AAIlBC,EAAAA,OAJkB;AAKlBC,EAAAA,MALkB;AAMlBC,EAAAA,OANkB;AAOlBC,EAAAA,aAPkB;AAQlBC,EAAAA,aARkB;AASlBC,EAAAA,UATkB;AAUlBC,EAAAA,MAVkB;AAWlBC,EAAAA,cAXkB;AAYlBC,EAAAA,aAZkB;AAalBC,EAAAA,qBAbkB;AAclBC,EAAAA,CAdkB;AAelB,KAAGC;AAfe,CAAD,kBAiBjB;AAAA,yBACE,QAAC,SAAD,OAAeA,SAAf;AAA0B,IAAA,UAAU,EAAEV,MAAtC;AAA8C,IAAA,OAAO,EAAEC,OAAvD;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,KAAK,EAAEQ,CAAC,CAAC,SAAD,CAFV;AAGE,MAAA,SAAS,EAAC,SAHZ;AAKE,MAAA,MAAM,EAAE,CAACE,CAAD,EAAIC,IAAJ,kBACN;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAA,kCACE;AAAG,YAAA,IAAI,EAAC,IAAR;AAAa,YAAA,OAAO,EAAE,MAAMR,UAAU,CAACQ,IAAD,CAAtC;AAA8C,YAAA,IAAI,EAAC,QAAnD;AAA4D,YAAA,QAAQ,EAAE,CAAtE;AAAA,oCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBADF,EACmB,GADnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAG,YAAA,IAAI,EAAC,IAAR;AAAa,YAAA,OAAO,EAAE,MAAMN,cAAc,CAACM,IAAD,CAA1C;AAAkD,YAAA,IAAI,EAAC,QAAvD;AAAgE,YAAA,QAAQ,EAAE,CAA1E;AAAA,mCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAG,YAAA,IAAI,EAAC,IAAR;AAAa,YAAA,OAAO,EAAE,MAAML,aAAa,CAACK,IAAD,CAAzC;AAAiD,YAAA,IAAI,EAAC,QAAtD;AAA+D,YAAA,QAAQ,EAAE,CAAzE;AAAA,sBACGA,IAAI,CAACC,IAAL,KAAc,SAAd,iBAA2B,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT;AAAzB;AAAA;AAAA;AAAA;AAAA;AAD9B;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAG,YAAA,IAAI,EAAC,IAAR;AAAa,YAAA,OAAO,EAAE,MAAMX,aAAa,CAACS,IAAD,CAAzC;AAAiD,YAAA,IAAI,EAAC,QAAtD;AAA+D,YAAA,QAAQ,EAAE,CAAzE;AAAA,mCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANJ,OAIM,SAJN;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,KAAK,EAAC,QAApB;AAA6B,MAAA,KAAK,EAAC,KAAnC;AAAyC,MAAA,KAAK,EAAC,MAA/C;AAAsD,MAAA,SAAS,EAAC,MAAhE;AAAkF,MAAA,MAAM;AAAxF,OAA2E,MAA3E;AAAA;AAAA;AAAA;AAAA,YAzBF,eA0BE,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,KAAK,EAAEH,CAAC,CAAC,UAAD,CADV;AAEE,MAAA,SAAS,EAAC,UAFZ;AAIE,MAAA,MAAM,MAJR;AAKE,MAAA,MAAM,EAAE,CAACM,IAAD,EAAOC,GAAP,KAAgB,GAAEA,GAAG,CAACC,QAAS,IAAGD,GAAG,CAACE,KAAM;AALtD,OAGM,UAHN;AAAA;AAAA;AAAA;AAAA,YA1BF,EAgCK,GAhCL,eAiCE,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,KAAK,EAAET,CAAC,CAAC,aAAD,CADV;AAEE,MAAA,SAAS,EAAC,aAFZ;AAIE,MAAA,MAAM,MAJR;AAKE,MAAA,MAAM,EAAE,CAACM,IAAD,EAAOC,GAAP,KAAgB,GAAEA,GAAG,CAACG,WAAY;AAL5C,OAGM,aAHN;AAAA;AAAA;AAAA;AAAA,YAjCF,EAuCK,GAvCL,eAwCE,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,KAAK,EAAEV,CAAC,CAAC,QAAD,CAFV;AAGE,MAAA,SAAS,EAAC,QAHZ;AAKE,MAAA,MAAM,MALR;AAME,MAAA,MAAM,EAAGM,IAAD,IAAW,KAAIA,IAAK,EAAV,CAAYK,OAAZ,CAAoB,uBAApB,EAA6C,GAA7C;AANpB,OAIM,QAJN;AAAA;AAAA;AAAA;AAAA,YAxCF,eAgDE,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,KAAK,EAAEX,CAAC,CAAC,SAAD,CAHV;AAIE,MAAA,SAAS,EAAC,SAJZ;AAME,MAAA,MAAM,MANR;AAOE,MAAA,MAAM,EAAGM,IAAD,IAAW,KAAIA,IAAK,EAAV,CAAYK,OAAZ,CAAoB,uBAApB,EAA6C,GAA7C;AAPpB,OAKM,SALN;AAAA;AAAA;AAAA;AAAA,YAhDF,eAyDE,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,KAAK,EAAC,KAFR;AAGE,MAAA,KAAK,EAAEX,CAAC,CAAC,OAAD,CAHV;AAIE,MAAA,SAAS,EAAC,OAJZ;AAME,MAAA,MAAM,MANR;AAOE,MAAA,MAAM,EAAGM,IAAD,IAAW,KAAIA,IAAK,EAAV,CAAYK,OAAZ,CAAoB,uBAApB,EAA6C,GAA7C;AAPpB,OAKM,OALN;AAAA;AAAA;AAAA;AAAA,YAzDF,eAkEE,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,KAAK,EAAEX,CAAC,CAAC,aAAD,CAFV;AAGE,MAAA,SAAS,EAAC,MAHZ;AAKE,MAAA,MAAM,MALR;AAME,MAAA,MAAM,EAAGM,IAAD,IAAU;AAChB,YAAIA,IAAI,KAAK,SAAb,EAAwB;AACtB,8BACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC,OAAX;AAAA,sBACGN,CAAC,CAAC,aAAD;AADJ,aAAuB,SAAvB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AACD,4BACE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,SAAX;AAAA,oBACGA,CAAC,CAAC,KAAD;AADJ,WAAyB,UAAzB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AAnBH,OAIM,MAJN;AAAA;AAAA;AAAA;AAAA,YAlEF,eAuFE,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,KAAK,EAAEA,CAAC,CAAC,QAAD,CADV;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,SAAS,EAAC,QAHZ;AAKE,MAAA,MAAM,MALR;AAME,MAAA,MAAM,EAAGM,IAAD,IAAU;AAChB,YAAIA,IAAI,KAAK,YAAb,EAA2B;AACzB,8BACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAC,OAAX;AAAA,sBACGN,CAAC,CAAC,WAAD;AADJ,aAAwBA,CAAC,CAAC,WAAD,CAAzB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AACD,4BACE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,SAAX;AAAA,oBACGA,CAAC,CAAC,SAAD;AADJ,WAA0BA,CAAC,CAAC,SAAD,CAA3B;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AAnBH,OAIM,QAJN;AAAA;AAAA;AAAA;AAAA,YAvFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iBAjBF;;KAAMd,U;AAkIN,qBAAeH,UAAU,CAACG,UAAD,CAAzB","sourcesContent":["import { useState } from \"react\";\nimport { Table, Space, Tag } from \"antd\";\nimport { CheckCircleTwoTone, RollbackOutlined, EditOutlined, DeleteOutlined, BarsOutlined } from \"@ant-design/icons\";\nimport { withRouter } from \"react-router-dom\";\nimport BaseTable from \"../../shared/components/BasicTable\";\nimport ActionUserTable from \"./ActionsTransTable\";\n\nconst PlansTable = ({\n  selectedUser,\n  setSelectedUser,\n  setPage,\n  history,\n  transs,\n  refetch,\n  initialValues,\n  handleDetails,\n  handleEdit,\n  userId,\n  handleArchived,\n  handleReverse,\n  openDetailsTransModal,\n  t,\n  ...restProps\n}) => (\n  <>\n    <BaseTable {...restProps} dataSource={transs} refetch={refetch}>\n      <Table.Column\n        width=\"120px\"\n        title={t(\"actions\")}\n        dataIndex=\"actions\"\n        key=\"actions\"\n        render={(_, data) => (\n          <div className=\"actions-column\">\n            <Space size=\"small\">\n              <a href=\"#!\" onClick={() => handleEdit(data)} role=\"button\" tabIndex={0}>\n                <EditOutlined />{\" \"}\n              </a>\n              <a href=\"#!\" onClick={() => handleArchived(data)} role=\"button\" tabIndex={0}>\n                <DeleteOutlined />\n              </a>\n              <a href=\"#!\" onClick={() => handleReverse(data)} role=\"button\" tabIndex={0}>\n                {data.type === \"inbound\" && <RollbackOutlined style={{ color: \"#fa541c\" }} />}\n              </a>\n              <a href=\"#!\" onClick={() => handleDetails(data)} role=\"button\" tabIndex={0}>\n                <BarsOutlined />\n              </a>\n            </Space>\n          </div>\n        )}\n      />\n      <Table.Column align=\"center\" width=\"10%\" title=\"code\" dataIndex=\"code\" key=\"code\" sorter />\n      <Table.Column\n        title={t(\"fullname\")}\n        dataIndex=\"fullname\"\n        key=\"fullname\"\n        sorter\n        render={(text, row) => `${row.fullname} ${row.email}`}\n      />{\" \"}\n      <Table.Column\n        title={t(\"description\")}\n        dataIndex=\"description\"\n        key=\"description\"\n        sorter\n        render={(text, row) => `${row.description}`}\n      />{\" \"}\n      <Table.Column\n        align=\"right\"\n        title={t(\"amount\")}\n        dataIndex=\"amount\"\n        key=\"amount\"\n        sorter\n        render={(text) => `$ ${text}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n      />\n      <Table.Column\n        align=\"right\"\n        width=\"10%\"\n        title={t(\"pending\")}\n        dataIndex=\"pending\"\n        key=\"pending\"\n        sorter\n        render={(text) => `$ ${text}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n      />\n      <Table.Column\n        align=\"right\"\n        width=\"10%\"\n        title={t(\"total\")}\n        dataIndex=\"total\"\n        key=\"total\"\n        sorter\n        render={(text) => `$ ${text}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n      />\n      <Table.Column\n        align=\"center\"\n        title={t(\"description\")}\n        dataIndex=\"type\"\n        key=\"type\"\n        sorter\n        render={(text) => {\n          if (text === \"inbound\") {\n            return (\n              <Tag color=\"green\" key=\"inbound\">\n                {t(\"incomeMoney\")}\n              </Tag>\n            );\n          }\n          return (\n            <Tag color=\"volcano\" key=\"outbound\">\n              {t(\"out\")}\n            </Tag>\n          );\n        }}\n      />\n      <Table.Column\n        title={t(\"status\")}\n        align=\"center\"\n        dataIndex=\"status\"\n        key=\"status\"\n        sorter\n        render={(text) => {\n          if (text === \"Completada\") {\n            return (\n              <Tag color=\"green\" key={t(\"completed\")}>\n                {t(\"completed\")}\n              </Tag>\n            );\n          }\n          return (\n            <Tag color=\"volcano\" key={t(\"pending\")}>\n              {t(\"pending\")}\n            </Tag>\n          );\n        }}\n      />\n    </BaseTable>\n  </>\n);\n\nexport default withRouter(PlansTable);\n"]},"metadata":{},"sourceType":"module"}