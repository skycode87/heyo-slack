{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { apiRoutes } from \"../../../constants/routes\";\nimport useFetch from \"../../shared/hooks/useFetch\";\n\nconst useAssists = () => {\n  _s();\n\n  const [assists, setAssists] = useState([]);\n  const [filters, setFilters] = useState({\n    type: \"\",\n    location: \"\",\n    userId: \"\"\n  });\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 100,\n    total: 0\n  });\n  const {\n    data,\n    loading,\n    refetch\n  } = useFetch(apiRoutes.ASSIST.LOAD_GRID, \"POST\", new URLSearchParams({ ...filters,\n    page: pagination.current,\n    rows: pagination.pageSize\n  }));\n  useEffect(() => {\n    if (data) {\n      setAssists(data === null || data === void 0 ? void 0 : data.rows);\n      setPagination({ ...pagination,\n        current: parseInt(data === null || data === void 0 ? void 0 : data.page),\n        total: parseInt(data === null || data === void 0 ? void 0 : data.records)\n      });\n    }\n  }, [data]);\n  return {\n    assists,\n    filtersAssists: filters,\n    setFiltersAssists: setFilters,\n    paginationAssists: pagination,\n    setPaginationAssists: setPagination,\n    loadingAssists: loading,\n    refetchAssists: refetch\n  };\n};\n\n_s(useAssists, \"xKRZhHbnzDjFQO6JVG1Nt8R8UsY=\", false, function () {\n  return [useFetch];\n});\n\nexport default useAssists;","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/guest/hooks/useAssists.js"],"names":["useState","useEffect","apiRoutes","useFetch","useAssists","assists","setAssists","filters","setFilters","type","location","userId","pagination","setPagination","current","pageSize","total","data","loading","refetch","ASSIST","LOAD_GRID","URLSearchParams","page","rows","parseInt","records","filtersAssists","setFiltersAssists","paginationAssists","setPaginationAssists","loadingAssists","refetchAssists"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC;AACrCS,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,QAAQ,EAAE,EAF2B;AAGrCC,IAAAA,MAAM,EAAE;AAH6B,GAAD,CAAtC;AAKA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC;AAAEc,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE,GAAxB;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GAAD,CAA5C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA6BhB,QAAQ,CACzCD,SAAS,CAACkB,MAAV,CAAiBC,SADwB,EAEzC,MAFyC,EAGzC,IAAIC,eAAJ,CAAoB,EAAE,GAAGf,OAAL;AAAcgB,IAAAA,IAAI,EAAEX,UAAU,CAACE,OAA/B;AAAwCU,IAAAA,IAAI,EAAEZ,UAAU,CAACG;AAAzD,GAApB,CAHyC,CAA3C;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,IAAJ,EAAU;AACRX,MAAAA,UAAU,CAACW,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,IAAP,CAAV;AACAX,MAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBE,QAAAA,OAAO,EAAEW,QAAQ,CAACR,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEM,IAAP,CAAlC;AAAgDP,QAAAA,KAAK,EAAES,QAAQ,CAACR,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAES,OAAP;AAA/D,OAAD,CAAb;AACD;AACF,GALQ,EAKN,CAACT,IAAD,CALM,CAAT;AAOA,SAAO;AACLZ,IAAAA,OADK;AAELsB,IAAAA,cAAc,EAAEpB,OAFX;AAGLqB,IAAAA,iBAAiB,EAAEpB,UAHd;AAILqB,IAAAA,iBAAiB,EAAEjB,UAJd;AAKLkB,IAAAA,oBAAoB,EAAEjB,aALjB;AAMLkB,IAAAA,cAAc,EAAEb,OANX;AAOLc,IAAAA,cAAc,EAAEb;AAPX,GAAP;AASD,CA9BD;;GAAMf,U;UAQ+BD,Q;;;AAwBrC,eAAeC,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { apiRoutes } from \"../../../constants/routes\";\nimport useFetch from \"../../shared/hooks/useFetch\";\n\nconst useAssists = () => {\n  const [assists, setAssists] = useState([]);\n  const [filters, setFilters] = useState({\n    type: \"\",\n    location: \"\",\n    userId: \"\",\n  });\n  const [pagination, setPagination] = useState({ current: 1, pageSize: 100, total: 0 });\n  const { data, loading, refetch } = useFetch(\n    apiRoutes.ASSIST.LOAD_GRID,\n    \"POST\",\n    new URLSearchParams({ ...filters, page: pagination.current, rows: pagination.pageSize })\n  );\n\n  useEffect(() => {\n    if (data) {\n      setAssists(data?.rows);\n      setPagination({ ...pagination, current: parseInt(data?.page), total: parseInt(data?.records) });\n    }\n  }, [data]);\n\n  return {\n    assists,\n    filtersAssists: filters,\n    setFiltersAssists: setFilters,\n    paginationAssists: pagination,\n    setPaginationAssists: setPagination,\n    loadingAssists: loading,\n    refetchAssists: refetch,\n  };\n};\n\nexport default useAssists;\n"]},"metadata":{},"sourceType":"module"}