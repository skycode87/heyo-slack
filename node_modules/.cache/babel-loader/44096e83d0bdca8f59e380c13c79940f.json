{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/plans/containers/PlansCalendar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport usePlans from \"../hooks/usePlans\";\nimport ManagePlanCalendarModal from \"../components/ManagePlanCalendarModal\";\nimport CalendarPlan from \"../components/CalendarPlan\";\nimport AddUserButton from \"../components/AddPlanButton\";\nimport PlansHeader from \"../components/PlansHeader\";\nimport { getPlan } from \"../requests\";\nimport { setPlan } from \"../../../redux/plan\";\nimport useModal from \"../../shared/hooks/useModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Plans = ({\n  isEmbed = false,\n  packId = null,\n  newPlan = false,\n  setNewPlan\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const sessionStoreRedux = useSelector(store => store.session);\n  const {\n    plans,\n    filters,\n    setFilters,\n    pagination,\n    setPagination,\n    loading,\n    refetch\n  } = usePlans(null, packId, null);\n  const [page, setPage] = useState(\"all\");\n  const [selectedPlan, setSelectedPlan] = useState({});\n  const [calendar, setCalendar] = useState({});\n  const [planId, setPlanId] = useState(null);\n  const [isOpenManagePlansModal, openManagePlansModal, closeManagePlansModal] = useModal();\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    duration: \"\",\n    category: \"\",\n    maxLimit: 1,\n    minLimit: 1,\n    observation: \"\",\n    active: true,\n    tag: \"\",\n    price: \"\",\n    avatar: \"\",\n    public: false,\n    closuredate: moment(moment().format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\"),\n    startdate: moment(moment().format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\")\n  });\n  useEffect(() => {\n    setPlan(selectedPlan)(dispatch);\n  }, [selectedPlan]);\n  useEffect(() => {\n    if (newPlan) {\n      openManagePlansModal();\n    }\n  }, [newPlan]);\n  useEffect(() => {\n    if (calendar === null || calendar === void 0 ? void 0 : calendar.start) {\n      openManagePlansModal();\n    }\n  }, [calendar]);\n  useEffect(() => {\n    setPlanId(selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan._id);\n    if (selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan._id) openManagePlansModal();\n  }, [selectedPlan]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [page === \"all\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isEmbed && /*#__PURE__*/_jsxDEV(PlansHeader, {\n        primaryAction: /*#__PURE__*/_jsxDEV(AddUserButton, {\n          refetch: refetch,\n          initialValues: initialValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CalendarPlan, {\n        setCalendar: setCalendar,\n        eventos: plans,\n        setSelectedPlan: setSelectedPlan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ManagePlanCalendarModal, {\n      refetch: refetch,\n      planId: planId,\n      setPlanId: setPlanId,\n      closeModal: closeManagePlansModal,\n      openModal: isOpenManagePlansModal,\n      initialValues: initialValues,\n      plans: plans,\n      selectedPlan: selectedPlan,\n      setSelectedPlanMain: setSelectedPlan,\n      setPlan: setPlan,\n      getPlan: getPlan,\n      session: sessionStoreRedux.currentSession,\n      calendar: calendar,\n      packId: packId,\n      setCalendar: setCalendar,\n      t: t,\n      newPlan: newPlan,\n      setNewPlan: setNewPlan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Plans, \"pFuAFqYvYKNVcu8x0sFBAmfi0v8=\", false, function () {\n  return [useDispatch, useTranslation, useSelector, usePlans, useModal];\n});\n\n_c = Plans;\nexport default Plans;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plans\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/plans/containers/PlansCalendar.js"],"names":["useState","useEffect","useTranslation","useSelector","useDispatch","moment","usePlans","ManagePlanCalendarModal","CalendarPlan","AddUserButton","PlansHeader","getPlan","setPlan","useModal","Plans","isEmbed","packId","newPlan","setNewPlan","dispatch","t","i18n","sessionStoreRedux","store","session","plans","filters","setFilters","pagination","setPagination","loading","refetch","page","setPage","selectedPlan","setSelectedPlan","calendar","setCalendar","planId","setPlanId","isOpenManagePlansModal","openManagePlansModal","closeManagePlansModal","initialValues","setInitialValues","name","duration","category","maxLimit","minLimit","observation","active","tag","price","avatar","public","closuredate","format","startdate","start","_id","currentSession"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,uBAAP,MAAoC,uCAApC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAO,GAAG,KAAZ;AAAmBC,EAAAA,MAAM,GAAG,IAA5B;AAAkCC,EAAAA,OAAO,GAAG,KAA5C;AAAmDC,EAAAA;AAAnD,CAAD,KAAqE;AAAA;;AACjF,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcnB,cAAc,EAAlC;AAEA,QAAMoB,iBAAiB,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAArC;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,UAAlB;AAA8BC,IAAAA,UAA9B;AAA0CC,IAAAA,aAA1C;AAAyDC,IAAAA,OAAzD;AAAkEC,IAAAA;AAAlE,MAA8EzB,QAAQ,CAAC,IAAD,EAAOU,MAAP,EAAe,IAAf,CAA5F;AAEA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkC,YAAD,EAAeC,eAAf,IAAkCnC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACoC,QAAD,EAAWC,WAAX,IAA0BrC,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACsC,MAAD,EAASC,SAAT,IAAsBvC,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACwC,sBAAD,EAAyBC,oBAAzB,EAA+CC,qBAA/C,IAAwE7B,QAAQ,EAAtF;AAEA,QAAM,CAAC8B,aAAD,EAAgBC,gBAAhB,IAAoC5C,QAAQ,CAAC;AACjD6C,IAAAA,IAAI,EAAE,EAD2C;AAEjDC,IAAAA,QAAQ,EAAE,EAFuC;AAGjDC,IAAAA,QAAQ,EAAE,EAHuC;AAIjDC,IAAAA,QAAQ,EAAE,CAJuC;AAKjDC,IAAAA,QAAQ,EAAE,CALuC;AAMjDC,IAAAA,WAAW,EAAE,EANoC;AAOjDC,IAAAA,MAAM,EAAE,IAPyC;AAQjDC,IAAAA,GAAG,EAAE,EAR4C;AASjDC,IAAAA,KAAK,EAAE,EAT0C;AAUjDC,IAAAA,MAAM,EAAE,EAVyC;AAWjDC,IAAAA,MAAM,EAAE,KAXyC;AAYjDC,IAAAA,WAAW,EAAEnD,MAAM,CAACA,MAAM,GAAGoD,MAAT,CAAgB,YAAhB,CAAD,EAAgC,YAAhC,CAZ8B;AAajDC,IAAAA,SAAS,EAAErD,MAAM,CAACA,MAAM,GAAGoD,MAAT,CAAgB,YAAhB,CAAD,EAAgC,YAAhC;AAbgC,GAAD,CAAlD;AAgBAxD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACsB,YAAD,CAAP,CAAsBf,QAAtB;AACD,GAFQ,EAEN,CAACe,YAAD,CAFM,CAAT;AAIAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,OAAJ,EAAa;AACXwB,MAAAA,oBAAoB;AACrB;AACF,GAJQ,EAIN,CAACxB,OAAD,CAJM,CAAT;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImC,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEuB,KAAd,EAAqB;AACnBlB,MAAAA,oBAAoB;AACrB;AACF,GAJQ,EAIN,CAACL,QAAD,CAJM,CAAT;AAMAnC,EAAAA,SAAS,CAAC,MAAM;AACdsC,IAAAA,SAAS,CAACL,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAE0B,GAAf,CAAT;AACA,QAAI1B,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAE0B,GAAlB,EAAuBnB,oBAAoB;AAC5C,GAHQ,EAGN,CAACP,YAAD,CAHM,CAAT;AAKA,sBACE;AAAA,eACGF,IAAI,KAAK,KAAT,iBACC;AAAA,iBACG,CAACjB,OAAD,iBACC,QAAC,WAAD;AAAa,QAAA,aAAa,eAAE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAEgB,OAAxB;AAAiC,UAAA,aAAa,EAAEY;AAAhD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIE,QAAC,YAAD;AAAc,QAAA,WAAW,EAAEN,WAA3B;AAAwC,QAAA,OAAO,EAAEZ,KAAjD;AAAwD,QAAA,eAAe,EAAEU;AAAzE;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAiCE,QAAC,uBAAD;AACE,MAAA,OAAO,EAAEJ,OADX;AAEE,MAAA,MAAM,EAAEO,MAFV;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,UAAU,EAAEG,qBAJd;AAKE,MAAA,SAAS,EAAEF,sBALb;AAME,MAAA,aAAa,EAAEG,aANjB;AAOE,MAAA,KAAK,EAAElB,KAPT;AAQE,MAAA,YAAY,EAAES,YARhB;AASE,MAAA,mBAAmB,EAAEC,eATvB;AAUE,MAAA,OAAO,EAAEvB,OAVX;AAWE,MAAA,OAAO,EAAED,OAXX;AAYE,MAAA,OAAO,EAAEW,iBAAiB,CAACuC,cAZ7B;AAaE,MAAA,QAAQ,EAAEzB,QAbZ;AAcE,MAAA,MAAM,EAAEpB,MAdV;AAeE,MAAA,WAAW,EAAEqB,WAff;AAgBE,MAAA,CAAC,EAAEjB,CAhBL;AAiBE,MAAA,OAAO,EAAEH,OAjBX;AAkBE,MAAA,UAAU,EAAEC;AAlBd;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA,kBADF;AAwDD,CA5GD;;GAAMJ,K;UACaV,W,EACGF,c,EAEMC,W,EAE0DG,Q,EAONO,Q;;;KAb1EC,K;AA8GN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport moment from \"moment\";\n\nimport usePlans from \"../hooks/usePlans\";\nimport ManagePlanCalendarModal from \"../components/ManagePlanCalendarModal\";\nimport CalendarPlan from \"../components/CalendarPlan\";\n\nimport AddUserButton from \"../components/AddPlanButton\";\nimport PlansHeader from \"../components/PlansHeader\";\nimport { getPlan } from \"../requests\";\nimport { setPlan } from \"../../../redux/plan\";\nimport useModal from \"../../shared/hooks/useModal\";\n\nconst Plans = ({ isEmbed = false, packId = null, newPlan = false, setNewPlan }) => {\n  const dispatch = useDispatch();\n  const { t, i18n } = useTranslation();\n\n  const sessionStoreRedux = useSelector((store) => store.session);\n\n  const { plans, filters, setFilters, pagination, setPagination, loading, refetch } = usePlans(null, packId, null);\n\n  const [page, setPage] = useState(\"all\");\n  const [selectedPlan, setSelectedPlan] = useState({});\n  const [calendar, setCalendar] = useState({});\n\n  const [planId, setPlanId] = useState(null);\n  const [isOpenManagePlansModal, openManagePlansModal, closeManagePlansModal] = useModal();\n\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    duration: \"\",\n    category: \"\",\n    maxLimit: 1,\n    minLimit: 1,\n    observation: \"\",\n    active: true,\n    tag: \"\",\n    price: \"\",\n    avatar: \"\",\n    public: false,\n    closuredate: moment(moment().format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\"),\n    startdate: moment(moment().format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\"),\n  });\n\n  useEffect(() => {\n    setPlan(selectedPlan)(dispatch);\n  }, [selectedPlan]);\n\n  useEffect(() => {\n    if (newPlan) {\n      openManagePlansModal();\n    }\n  }, [newPlan]);\n\n  useEffect(() => {\n    if (calendar?.start) {\n      openManagePlansModal();\n    }\n  }, [calendar]);\n\n  useEffect(() => {\n    setPlanId(selectedPlan?._id);\n    if (selectedPlan?._id) openManagePlansModal();\n  }, [selectedPlan]);\n\n  return (\n    <>\n      {page === \"all\" && (\n        <div>\n          {!isEmbed && (\n            <PlansHeader primaryAction={<AddUserButton refetch={refetch} initialValues={initialValues} />} />\n          )}\n          <CalendarPlan setCalendar={setCalendar} eventos={plans} setSelectedPlan={setSelectedPlan} />\n        </div>\n      )}\n      {/*\n      page === \"one\" && (\n        <div>\n          <PlanHeader\n            setPage={setPage}\n            selectedPlan={selectedPlan}\n            handleEdit={handleEdit}\n            setSubpage={setSubpage}\n            handleArchived={handleArchived}\n          />\n          {subpage === \"1\" && (\n            <div style={{ padding: 20 }}>\n              <TransContainer isEmbed=\"true\" planId={planId} />\n            </div>\n          )}\n          {subpage === \"2\" && (\n            <div style={{ padding: 20 }}>\n              <AppsTable planId={selectedPlan._id} />\n            </div>\n          )}\n        </div>\n          )\n          */}\n\n      <ManagePlanCalendarModal\n        refetch={refetch}\n        planId={planId}\n        setPlanId={setPlanId}\n        closeModal={closeManagePlansModal}\n        openModal={isOpenManagePlansModal}\n        initialValues={initialValues}\n        plans={plans}\n        selectedPlan={selectedPlan}\n        setSelectedPlanMain={setSelectedPlan}\n        setPlan={setPlan}\n        getPlan={getPlan}\n        session={sessionStoreRedux.currentSession}\n        calendar={calendar}\n        packId={packId}\n        setCalendar={setCalendar}\n        t={t}\n        newPlan={newPlan}\n        setNewPlan={setNewPlan}\n      />\n    </>\n  );\n};\n\nexport default Plans;\n"]},"metadata":{},"sourceType":"module"}