{"ast":null,"code":"import { customFetch, FetchJson } from \"../../helpers/fetch\";\nimport { apiRoutes } from \"../../constants/routes\";\n\nconst savePack = async (props = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    packId\n  } = props;\n  const method = packId ? \"PUT\" : \"POST\";\n  const path = packId ? `${apiRoutes.PACKS.SAVE_DATA}/${packId}` : `${apiRoutes.PACKS.SAVE_DATA}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst savePackContent = async (props = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    packId\n  } = props;\n  const method = packId ? \"PUT\" : \"POST\";\n  const path = packId ? `${apiRoutes.PACKS.SAVE_DATA_CONTENT}/${packId}` : `${apiRoutes.PACKS.SAVE_DATA_CONTENT}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst getPack = async (packId = 0, {\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.PACKS.GET_DATA}/${packId}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst getPacks = async ({\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.PACKS.ALL}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst deletePack = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  try {\n    const request = await customFetch(apiRoutes.CATEGORIES.DELETE_CATEGORY, {\n      method: \"POST\",\n      body: new URLSearchParams(params)\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst archivedPack = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    _id\n  } = params.pack;\n  const method = \"PUT\";\n  const path = `${apiRoutes.PACKS.ARCHIVED}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, {\n      archived: true\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst activePack = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    _id,\n    active\n  } = params.pack;\n  const method = \"PUT\";\n  const path = `${apiRoutes.PACKS.ACTIVE}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, {\n      active: !active\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst saveAssist = async (props = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    userId\n  } = props;\n  const method = \"POST\";\n  const path = `${apiRoutes.ASSIST.SAVE}/${userId}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nexport { getPack, getPacks, savePack, deletePack, archivedPack, activePack, saveAssist, savePackContent };","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/packs/requests.js"],"names":["customFetch","FetchJson","apiRoutes","savePack","props","onSuccess","onError","onFinally","packId","method","path","PACKS","SAVE_DATA","request","response","json","error","process","env","NODE_ENV","console","log","savePackContent","SAVE_DATA_CONTENT","getPack","GET_DATA","getPacks","ALL","deletePack","params","CATEGORIES","DELETE_CATEGORY","body","URLSearchParams","archivedPack","_id","pack","ARCHIVED","archived","activePack","active","ACTIVE","saveAssist","userId","ASSIST","SAVE"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,qBAAvC;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,MAAMC,QAAQ,GAAG,OAAOC,KAAK,GAAG,EAAf,EAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,IAAoC,EAAvD,KAA8D;AAC7E,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,KAAnB;AACA,QAAMK,MAAM,GAAGD,MAAM,GAAG,KAAH,GAAW,MAAhC;AACA,QAAME,IAAI,GAAGF,MAAM,GAAI,GAAEN,SAAS,CAACS,KAAV,CAAgBC,SAAU,IAAGJ,MAAO,EAA1C,GAA+C,GAAEN,SAAS,CAACS,KAAV,CAAgBC,SAAU,EAA9F;;AAEA,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMZ,SAAS,CAACS,IAAD,EAAOD,MAAP,EAAeL,KAAf,CAA/B;AAEA,UAAMU,QAAQ,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAvB;AACAV,IAAAA,SAAS,CAACS,QAAD,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDV,IAAAA,OAAO;AACR,GAXD,SAWU;AACRC,IAAAA,SAAS;AACV;AACF,CAnBD;;AAqBA,MAAMe,eAAe,GAAG,OAAOlB,KAAK,GAAG,EAAf,EAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,IAAoC,EAAvD,KAA8D;AACpF,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,KAAnB;AACA,QAAMK,MAAM,GAAGD,MAAM,GAAG,KAAH,GAAW,MAAhC;AACA,QAAME,IAAI,GAAGF,MAAM,GAAI,GAAEN,SAAS,CAACS,KAAV,CAAgBY,iBAAkB,IAAGf,MAAO,EAAlD,GAAuD,GAAEN,SAAS,CAACS,KAAV,CAAgBY,iBAAkB,EAA9G;;AAEA,MAAI;AACF,UAAMV,OAAO,GAAG,MAAMZ,SAAS,CAACS,IAAD,EAAOD,MAAP,EAAeL,KAAf,CAA/B;AAEA,UAAMU,QAAQ,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAvB;AACAV,IAAAA,SAAS,CAACS,QAAD,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDV,IAAAA,OAAO;AACR,GAXD,SAWU;AACRC,IAAAA,SAAS;AACV;AACF,CAnBD;;AAqBA,MAAMiB,OAAO,GAAG,OAAOhB,MAAM,GAAG,CAAhB,EAAmB;AAAEH,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAAyB,EAA5C,KAAmD;AACjE,MAAI;AACF,UAAMO,OAAO,GAAG,MAAMZ,SAAS,CAAE,GAAEC,SAAS,CAACS,KAAV,CAAgBc,QAAS,IAAGjB,MAAO,EAAvC,EAA0C,KAA1C,CAA/B;AAEA,UAAMM,QAAQ,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAvB;AACAV,IAAAA,SAAS,CAACS,QAAD,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDV,IAAAA,OAAO;AACR;AACF,CAbD;;AAeA,MAAMoB,QAAQ,GAAG,OAAO;AAAErB,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAAyB,EAAhC,KAAuC;AACtD,MAAI;AACF,UAAMO,OAAO,GAAG,MAAMZ,SAAS,CAAE,GAAEC,SAAS,CAACS,KAAV,CAAgBgB,GAAI,EAAxB,EAA2B,KAA3B,CAA/B;AAEA,UAAMb,QAAQ,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAvB;AACAV,IAAAA,SAAS,CAACS,QAAD,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDV,IAAAA,OAAO;AACR;AACF,CAbD;;AAeA,MAAMsB,UAAU,GAAG,OAAOC,MAAM,GAAG,EAAhB,EAAoB;AAAExB,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,IAAoC,EAAxD,KAA+D;AAChF,MAAI;AACF,UAAMM,OAAO,GAAG,MAAMb,WAAW,CAACE,SAAS,CAAC4B,UAAV,CAAqBC,eAAtB,EAAuC;AACtEtB,MAAAA,MAAM,EAAE,MAD8D;AAEtEuB,MAAAA,IAAI,EAAE,IAAIC,eAAJ,CAAoBJ,MAApB;AAFgE,KAAvC,CAAjC;AAKA,UAAMf,QAAQ,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAvB;AAEAV,IAAAA,SAAS,CAACS,QAAD,CAAT;AACD,GATD,CASE,OAAOE,KAAP,EAAc;AACd,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDV,IAAAA,OAAO;AACR,GAfD,SAeU;AACRC,IAAAA,SAAS;AACV;AACF,CAnBD;;AAqBA,MAAM2B,YAAY,GAAG,OAAOL,MAAM,GAAG,EAAhB,EAAoB;AAAExB,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,IAAoC,EAAxD,KAA+D;AAClF,QAAM;AAAE4B,IAAAA;AAAF,MAAUN,MAAM,CAACO,IAAvB;AACA,QAAM3B,MAAM,GAAG,KAAf;AACA,QAAMC,IAAI,GAAI,GAAER,SAAS,CAACS,KAAV,CAAgB0B,QAAS,IAAGF,GAAI,EAAhD;;AAEA,MAAI;AACF,UAAMtB,OAAO,GAAG,MAAMZ,SAAS,CAACS,IAAD,EAAOD,MAAP,EAAe;AAAE6B,MAAAA,QAAQ,EAAE;AAAZ,KAAf,CAA/B;AAEA,UAAMxB,QAAQ,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAvB;AACAV,IAAAA,SAAS,CAACS,QAAD,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDV,IAAAA,OAAO;AACR,GAXD,SAWU;AACRC,IAAAA,SAAS;AACV;AACF,CAnBD;;AAqBA,MAAMgC,UAAU,GAAG,OAAOV,MAAM,GAAG,EAAhB,EAAoB;AAAExB,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,IAAoC,EAAxD,KAA+D;AAChF,QAAM;AAAE4B,IAAAA,GAAF;AAAOK,IAAAA;AAAP,MAAkBX,MAAM,CAACO,IAA/B;AACA,QAAM3B,MAAM,GAAG,KAAf;AACA,QAAMC,IAAI,GAAI,GAAER,SAAS,CAACS,KAAV,CAAgB8B,MAAO,IAAGN,GAAI,EAA9C;;AAEA,MAAI;AACF,UAAMtB,OAAO,GAAG,MAAMZ,SAAS,CAACS,IAAD,EAAOD,MAAP,EAAe;AAAE+B,MAAAA,MAAM,EAAE,CAACA;AAAX,KAAf,CAA/B;AAEA,UAAM1B,QAAQ,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAvB;AACAV,IAAAA,SAAS,CAACS,QAAD,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDV,IAAAA,OAAO;AACR,GAXD,SAWU;AACRC,IAAAA,SAAS;AACV;AACF,CAnBD;;AAqBA,MAAMmC,UAAU,GAAG,OAAOtC,KAAK,GAAG,EAAf,EAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,IAAoC,EAAvD,KAA8D;AAC/E,QAAM;AAAEoC,IAAAA;AAAF,MAAavC,KAAnB;AACA,QAAMK,MAAM,GAAG,MAAf;AACA,QAAMC,IAAI,GAAI,GAAER,SAAS,CAAC0C,MAAV,CAAiBC,IAAK,IAAGF,MAAO,EAAhD;;AAEA,MAAI;AACF,UAAM9B,OAAO,GAAG,MAAMZ,SAAS,CAACS,IAAD,EAAOD,MAAP,EAAeL,KAAf,CAA/B;AAEA,UAAMU,QAAQ,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAvB;AACAV,IAAAA,SAAS,CAACS,QAAD,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD;;AAEDV,IAAAA,OAAO;AACR,GAXD,SAWU;AACRC,IAAAA,SAAS;AACV;AACF,CAnBD;;AAqBA,SAASiB,OAAT,EAAkBE,QAAlB,EAA4BvB,QAA5B,EAAsCyB,UAAtC,EAAkDM,YAAlD,EAAgEK,UAAhE,EAA4EG,UAA5E,EAAwFpB,eAAxF","sourcesContent":["import { customFetch, FetchJson } from \"../../helpers/fetch\";\nimport { apiRoutes } from \"../../constants/routes\";\n\nconst savePack = async (props = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { packId } = props;\n  const method = packId ? \"PUT\" : \"POST\";\n  const path = packId ? `${apiRoutes.PACKS.SAVE_DATA}/${packId}` : `${apiRoutes.PACKS.SAVE_DATA}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst savePackContent = async (props = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { packId } = props;\n  const method = packId ? \"PUT\" : \"POST\";\n  const path = packId ? `${apiRoutes.PACKS.SAVE_DATA_CONTENT}/${packId}` : `${apiRoutes.PACKS.SAVE_DATA_CONTENT}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst getPack = async (packId = 0, { onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.PACKS.GET_DATA}/${packId}`, \"GET\");\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst getPacks = async ({ onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.PACKS.ALL}`, \"GET\");\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst deletePack = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  try {\n    const request = await customFetch(apiRoutes.CATEGORIES.DELETE_CATEGORY, {\n      method: \"POST\",\n      body: new URLSearchParams(params),\n    });\n\n    const response = await request.json();\n\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst archivedPack = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { _id } = params.pack;\n  const method = \"PUT\";\n  const path = `${apiRoutes.PACKS.ARCHIVED}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, { archived: true });\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst activePack = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { _id, active } = params.pack;\n  const method = \"PUT\";\n  const path = `${apiRoutes.PACKS.ACTIVE}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, { active: !active });\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst saveAssist = async (props = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { userId } = props;\n  const method = \"POST\";\n  const path = `${apiRoutes.ASSIST.SAVE}/${userId}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nexport { getPack, getPacks, savePack, deletePack, archivedPack, activePack, saveAssist, savePackContent };\n"]},"metadata":{},"sourceType":"module"}