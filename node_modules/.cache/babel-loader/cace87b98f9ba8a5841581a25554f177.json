{"ast":null,"code":"import { FetchJson } from \"../../helpers/fetch\";\nimport { apiRoutes } from \"../../constants/routes\";\n\nconst saveApp = async (props = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    appId\n  } = props;\n  const method = appId ? \"PUT\" : \"POST\";\n  const path = appId ? `${apiRoutes.APPS.SAVE_DATA}/${appId}` : `${apiRoutes.APPS.SAVE_DATA}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst getApp = async (appId = 0, {\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.APPS.GET_DATA}/${appId}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst getApps = async ({\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.APPS.ALL}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst archivedApp = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    _id\n  } = params.app;\n  const method = \"PUT\";\n  const path = `${apiRoutes.APPS.ARCHIVED}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, {\n      archived: true\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst activeApp = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    _id,\n    active\n  } = params.app;\n  const method = \"PUT\";\n  const path = `${apiRoutes.APPS.ACTIVE}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, {\n      active: !active\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst saveAppFromUser = async (props = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const method = \"POST\";\n  const path = `${apiRoutes.APPS.SAVE_DATA}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst statusApp = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const method = \"POST\";\n  const path = `${apiRoutes.APPS.STATUS}/${params._id}`;\n\n  try {\n    const request = await FetchJson(path, method, params);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nexport { getApp, saveApp, archivedApp, activeApp, saveAppFromUser, statusApp, getApps };","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/apps/requests.js"],"names":["FetchJson","apiRoutes","saveApp","props","onSuccess","onError","onFinally","appId","method","path","APPS","SAVE_DATA","request","response","json","error","process","env","NODE_ENV","console","log","getApp","GET_DATA","getApps","ALL","archivedApp","params","_id","app","ARCHIVED","archived","activeApp","active","ACTIVE","saveAppFromUser","statusApp","STATUS"],"mappings":"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","sourcesContent":["import { FetchJson } from \"../../helpers/fetch\";\nimport { apiRoutes } from \"../../constants/routes\";\n\nconst saveApp = async (props = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { appId } = props;\n  const method = appId ? \"PUT\" : \"POST\";\n  const path = appId ? `${apiRoutes.APPS.SAVE_DATA}/${appId}` : `${apiRoutes.APPS.SAVE_DATA}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst getApp = async (appId = 0, { onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.APPS.GET_DATA}/${appId}`, \"GET\");\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst getApps = async ({ onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.APPS.ALL}`, \"GET\");\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst archivedApp = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { _id } = params.app;\n  const method = \"PUT\";\n  const path = `${apiRoutes.APPS.ARCHIVED}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, { archived: true });\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst activeApp = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { _id, active } = params.app;\n  const method = \"PUT\";\n  const path = `${apiRoutes.APPS.ACTIVE}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, { active: !active });\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst saveAppFromUser = async (props = {}, { onSuccess, onError, onFinally } = {}) => {\n  const method = \"POST\";\n  const path = `${apiRoutes.APPS.SAVE_DATA}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst statusApp = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  const method = \"POST\";\n  const path = `${apiRoutes.APPS.STATUS}/${params._id}`;\n\n  try {\n    const request = await FetchJson(path, method, params);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nexport { getApp, saveApp, archivedApp, activeApp, saveAppFromUser, statusApp, getApps };\n"]},"metadata":{},"sourceType":"module"}