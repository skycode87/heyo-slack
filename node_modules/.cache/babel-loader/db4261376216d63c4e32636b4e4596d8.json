{"ast":null,"code":"import { customFetch, FetchJson } from \"../../helpers/fetch\";\nimport { apiRoutes } from \"../../constants/routes\";\n\nconst saveMaster = async (props = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    masterId\n  } = props;\n  const method = masterId ? \"PUT\" : \"POST\";\n  const path = masterId ? `${apiRoutes.MASTER.SAVE}/${masterId}` : `${apiRoutes.MASTER.SAVE}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst getMaster = async (masterId = 0, {\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.MASTER.GET_DATA}/${masterId}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst deleteMaster = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  try {\n    const request = await customFetch(apiRoutes.CATEGORIES.DELETE_CATEGORY, {\n      method: \"POST\",\n      body: new URLSearchParams(params)\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst archivedMaster = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    _id\n  } = params.master;\n  const method = \"PUT\";\n  const path = `${apiRoutes.MASTER.ARCHIVED}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, {\n      archived: true\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst activeMaster = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  console.log(params.master.active);\n  const {\n    _id,\n    active\n  } = params.master;\n  const method = \"PUT\";\n  const path = `${apiRoutes.MASTER.ACTIVE}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, {\n      active: !active\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nexport { getMaster, saveMaster, deleteMaster, archivedMaster, activeMaster };","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/master/requests.js"],"names":["customFetch","FetchJson","apiRoutes","saveMaster","props","onSuccess","onError","onFinally","masterId","method","path","MASTER","SAVE","request","response","json","error","process","env","NODE_ENV","console","log","getMaster","GET_DATA","deleteMaster","params","CATEGORIES","DELETE_CATEGORY","body","URLSearchParams","archivedMaster","_id","master","ARCHIVED","archived","activeMaster","active","ACTIVE"],"mappings":"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","sourcesContent":["import { customFetch, FetchJson } from \"../../helpers/fetch\";\nimport { apiRoutes } from \"../../constants/routes\";\n\nconst saveMaster = async (props = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { masterId } = props;\n  const method = masterId ? \"PUT\" : \"POST\";\n  const path = masterId ? `${apiRoutes.MASTER.SAVE}/${masterId}` : `${apiRoutes.MASTER.SAVE}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst getMaster = async (masterId = 0, { onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.MASTER.GET_DATA}/${masterId}`, \"GET\");\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst deleteMaster = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  try {\n    const request = await customFetch(apiRoutes.CATEGORIES.DELETE_CATEGORY, {\n      method: \"POST\",\n      body: new URLSearchParams(params),\n    });\n\n    const response = await request.json();\n\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst archivedMaster = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { _id } = params.master;\n  const method = \"PUT\";\n  const path = `${apiRoutes.MASTER.ARCHIVED}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, { archived: true });\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst activeMaster = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  console.log(params.master.active);\n  const { _id, active } = params.master;\n  const method = \"PUT\";\n  const path = `${apiRoutes.MASTER.ACTIVE}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, { active: !active });\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nexport { getMaster, saveMaster, deleteMaster, archivedMaster, activeMaster };\n"]},"metadata":{},"sourceType":"module"}