{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/login/components/loginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { spaRoutes } from \"../../../constants/routes\";\nimport useAlert from \"../../shared/hooks/useAlert\";\nimport { save } from \"../../../redux/root\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  login,\n  router\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [renderAlert, openAlert] = useAlert();\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    setIsSubmit(true);\n    login(values, {\n      onFail: response => {\n        openAlert({\n          message: response.message,\n          type: \"error\"\n        });\n        form.resetFields();\n      },\n      onSuccess: response => {\n        save(response)(dispatch);\n        router.history.push(spaRoutes.HOME);\n      },\n      onFinish: () => setIsSubmit(false)\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: \"Please input your username!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: \"Please input your password!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: isSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), renderAlert()]\n  }, void 0, true);\n};\n\n_s(Login, \"gm0QNosOm9Ec923rVOM1aY3oSaU=\", false, function () {\n  return [useDispatch, useAlert, Form.useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/login/components/loginForm.js"],"names":["useState","Form","Input","Button","Checkbox","useDispatch","spaRoutes","useAlert","save","Login","login","router","dispatch","renderAlert","openAlert","isSubmit","setIsSubmit","form","useForm","onFinish","values","onFail","response","message","type","resetFields","onSuccess","history","push","HOME","onFinishFailed","errorInfo","console","log","remember","required"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { spaRoutes } from \"../../../constants/routes\";\nimport useAlert from \"../../shared/hooks/useAlert\";\n\nimport { save } from \"../../../redux/root\";\n\nconst Login = ({ login, router }) => {\n  const dispatch = useDispatch();\n  const [renderAlert, openAlert] = useAlert();\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    setIsSubmit(true);\n    login(values, {\n      onFail: (response) => {\n        openAlert({ message: response.message, type: \"error\" });\n        form.resetFields();\n      },\n      onSuccess: (response) => {\n        save(response)(dispatch);\n        router.history.push(spaRoutes.HOME);\n      },\n      onFinish: () => setIsSubmit(false),\n    });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <>\n      <Form\n        form={form}\n        name=\"basic\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isSubmit}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      {renderAlert()}\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}