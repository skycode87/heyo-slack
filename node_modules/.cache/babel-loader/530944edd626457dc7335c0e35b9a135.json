{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/profile/components/ManagePasswordForm.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable prefer-promise-reject-errors */\nimport { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport debounce from \"lodash/debounce\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\nimport { Form, Row, Col, Input, Spin, Button, message } from \"antd\";\nimport { savePasswordProfile, getProfile } from \"../requests\";\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport { setProfileRedux } from \"../../../redux/profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultValues = {\n  password: \"\",\n  oldPassword: \"\",\n  passwordConfirm: \"\"\n};\n\nconst ManageProfileForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const sessionStoreRedux = useSelector(store => store.session);\n  const [selectedProfile, setSelectedProfile] = useState(defaultValues);\n  const [form] = Form.useForm();\n  const [loaderForm, setLoaderForm] = useState(false);\n  useEffect(() => {\n    setLoaderForm(true);\n    getProfile(true, {\n      onSuccess: response => {\n        setProfileRedux(response.result)(dispatch);\n        setSelectedProfile({ ...response.result\n        });\n        setLoaderForm(false);\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\"))\n    });\n  }, []);\n  useEffect(() => {\n    form.setFieldsValue(selectedProfile);\n  }, [form, selectedProfile]);\n\n  const onFinish = values => {\n    const data = { ...selectedProfile,\n      ...values\n    };\n\n    if (data.password === data.passwordConfirm) {\n      savePasswordProfile({ ...data,\n        rootId: sessionStoreRedux.currentSession_id\n      }, {\n        onSuccess: response => {\n          setProfileRedux(response.result)(dispatch);\n          showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n        onFinally: () => {}\n      });\n    } else {\n      message.error(\"Las contrasenas no coinciden\");\n    }\n  };\n\n  const handleFinishConfirm = values => {\n    confirmAlert({\n      title: t(\"update\"),\n      message: `Esta seguro que desea continuar ?`,\n      buttons: [{\n        label: t(\"yes\"),\n        onClick: () => onFinish(values)\n      }, {\n        label: t(\"no\"),\n        onClick: () => {}\n      }]\n    });\n  };\n\n  const onValuesChange = debounce(values => {\n    setSelectedProfile({ ...selectedProfile,\n      ...values\n    });\n  }, 500);\n\n  const handleSubmit = () => {\n    form.validateFields().then(() => {\n      form.submit();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"manage-category-form-modal\",\n    initialValues: defaultValues,\n    className: \"manage-modal\",\n    onFinish: handleFinishConfirm,\n    labelCol: {\n      span: 24\n    },\n    onValuesChange: onValuesChange,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"layout-form-modal entity-550 entity-small\",\n      children: loaderForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          tip: t(\"loading\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 15,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"oldPassword\",\n              tooltip: \"Firstname here pleaseio\",\n              label: t(\"oldPassword\"),\n              rules: [{\n                required: true,\n                message: \"Please confirm your password!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                iconRender: visible => visible ? /*#__PURE__*/_jsxDEV(EyeTwoTone, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 71\n                }, this) : /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 88\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"password\",\n              tooltip: \"Firstname here pleaseio\",\n              label: t(\"password\"),\n              rules: [{\n                required: true,\n                message: \"Please input your password!\"\n              }],\n              hasFeedback: true,\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                iconRender: visible => visible ? /*#__PURE__*/_jsxDEV(EyeTwoTone, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 71\n                }, this) : /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 88\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"passwordConfirm\",\n              tooltip: \"Firstname here pleaseio\",\n              label: \"Repetir password\",\n              dependencies: [\"password\"],\n              hasFeedback: true,\n              rules: [{\n                required: true,\n                message: \"Please confirm your password!\"\n              }, ({\n                getFieldValue\n              }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(\"The two passwords that you entered do not match!\");\n                }\n\n              })],\n              children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                iconRender: visible => visible ? /*#__PURE__*/_jsxDEV(EyeTwoTone, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 71\n                }, this) : /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 88\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  float: \"right\"\n                },\n                type: \"primary\",\n                onClick: handleSubmit,\n                children: [t(\"update\"), \" \", t(\"password\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageProfileForm, \"+S177/dd1y1HfNOKdbnp948fNrM=\", false, function () {\n  return [useDispatch, useTranslation, useSelector, Form.useForm];\n});\n\n_c = ManageProfileForm;\nManageProfileForm.defaultProps = {\n  setProfileId: () => {}\n};\nexport default ManageProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageProfileForm\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/profile/components/ManagePasswordForm.js"],"names":["useState","useEffect","useTranslation","useSelector","useDispatch","debounce","confirmAlert","EyeInvisibleOutlined","EyeTwoTone","Form","Row","Col","Input","Spin","Button","message","savePasswordProfile","getProfile","showGlobalNotification","setProfileRedux","defaultValues","password","oldPassword","passwordConfirm","ManageProfileForm","dispatch","t","i18n","sessionStoreRedux","store","session","selectedProfile","setSelectedProfile","form","useForm","loaderForm","setLoaderForm","onSuccess","response","result","onError","setFieldsValue","onFinish","values","data","rootId","currentSession_id","onFinally","error","handleFinishConfirm","title","buttons","label","onClick","onValuesChange","handleSubmit","validateFields","then","submit","span","required","visible","getFieldValue","validator","_","value","Promise","resolve","reject","float","defaultProps","setProfileId"],"mappings":"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","sourcesContent":["/* eslint-disable prefer-promise-reject-errors */\nimport { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport debounce from \"lodash/debounce\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\n\nimport { Form, Row, Col, Input, Spin, Button, message } from \"antd\";\nimport { savePasswordProfile, getProfile } from \"../requests\";\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport { setProfileRedux } from \"../../../redux/profile\";\n\nconst defaultValues = {\n  password: \"\",\n  oldPassword: \"\",\n  passwordConfirm: \"\",\n};\n\nconst ManageProfileForm = () => {\n  const dispatch = useDispatch();\n  const { t, i18n } = useTranslation();\n\n  const sessionStoreRedux = useSelector((store) => store.session);\n\n  const [selectedProfile, setSelectedProfile] = useState(defaultValues);\n  const [form] = Form.useForm();\n  const [loaderForm, setLoaderForm] = useState(false);\n\n  useEffect(() => {\n    setLoaderForm(true);\n    getProfile(true, {\n      onSuccess: (response) => {\n        setProfileRedux(response.result)(dispatch);\n        setSelectedProfile({\n          ...response.result,\n        });\n        setLoaderForm(false);\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n    });\n  }, []);\n\n  useEffect(() => {\n    form.setFieldsValue(selectedProfile);\n  }, [form, selectedProfile]);\n\n  const onFinish = (values) => {\n    const data = { ...selectedProfile, ...values };\n\n    if (data.password === data.passwordConfirm) {\n      savePasswordProfile(\n        {\n          ...data,\n          rootId: sessionStoreRedux.currentSession_id,\n        },\n        {\n          onSuccess: (response) => {\n            setProfileRedux(response.result)(dispatch);\n            showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n          },\n          onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n          onFinally: () => {},\n        }\n      );\n    } else {\n      message.error(\"Las contrasenas no coinciden\");\n    }\n  };\n\n  const handleFinishConfirm = (values) => {\n    confirmAlert({\n      title: t(\"update\"),\n      message: `Esta seguro que desea continuar ?`,\n      buttons: [\n        {\n          label: t(\"yes\"),\n          onClick: () => onFinish(values),\n        },\n        {\n          label: t(\"no\"),\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const onValuesChange = debounce((values) => {\n    setSelectedProfile({ ...selectedProfile, ...values });\n  }, 500);\n\n  const handleSubmit = () => {\n    form.validateFields().then(() => {\n      form.submit();\n    });\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"manage-category-form-modal\"\n      initialValues={defaultValues}\n      className=\"manage-modal\"\n      onFinish={handleFinishConfirm}\n      labelCol={{ span: 24 }}\n      onValuesChange={onValuesChange}\n    >\n      <div className=\"layout-form-modal entity-550 entity-small\">\n        {loaderForm ? (\n          <>\n            <Spin tip={t(\"loading\")} />\n          </>\n        ) : (\n          <>\n            <Row gutter={15}>\n              <Col span={6}>\n                <Form.Item\n                  name=\"oldPassword\"\n                  tooltip=\"Firstname here pleaseio\"\n                  label={t(\"oldPassword\")}\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please confirm your password!\",\n                    },\n                  ]}\n                >\n                  <Input.Password iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\n                </Form.Item>\n              </Col>\n              <Col span={6}>\n                <Form.Item\n                  name=\"password\"\n                  tooltip=\"Firstname here pleaseio\"\n                  label={t(\"password\")}\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your password!\",\n                    },\n                  ]}\n                  hasFeedback\n                >\n                  <Input.Password iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\n                </Form.Item>\n              </Col>\n              <Col span={6}>\n                <Form.Item\n                  name=\"passwordConfirm\"\n                  tooltip=\"Firstname here pleaseio\"\n                  label=\"Repetir password\"\n                  dependencies={[\"password\"]}\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please confirm your password!\",\n                    },\n                    ({ getFieldValue }) => ({\n                      validator(_, value) {\n                        if (!value || getFieldValue(\"password\") === value) {\n                          return Promise.resolve();\n                        }\n\n                        return Promise.reject(\"The two passwords that you entered do not match!\");\n                      },\n                    }),\n                  ]}\n                >\n                  <Input.Password iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)} />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={24}>\n                <Form.Item>\n                  <Button style={{ float: \"right\" }} type=\"primary\" onClick={handleSubmit}>\n                    {t(\"update\")} {t(\"password\")}\n                  </Button>\n                </Form.Item>\n              </Col>\n            </Row>\n          </>\n        )}\n      </div>\n    </Form>\n  );\n};\n\nManageProfileForm.defaultProps = {\n  setProfileId: () => {},\n};\n\nexport default ManageProfileForm;\n"]},"metadata":{},"sourceType":"module"}