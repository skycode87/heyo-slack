{"ast":null,"code":"import { customFetch, FetchJson } from \"../../helpers/fetch\";\nimport { apiRoutes } from \"../../constants/routes\";\n\nconst saveUser = async (props = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    userId\n  } = props;\n  const method = userId ? \"PUT\" : \"POST\";\n  const path = userId ? `${apiRoutes.USERS.SAVE_DATA}/${userId}` : `${apiRoutes.USERS.SAVE_DATA}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst getUser = async (userId = 0, {\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.USERS.GET_DATA}/${userId}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst deleteUser = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  try {\n    const request = await customFetch(apiRoutes.CATEGORIES.DELETE_CATEGORY, {\n      method: \"POST\",\n      body: new URLSearchParams(params)\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst archivedUser = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    _id\n  } = params.user;\n  const method = \"PUT\";\n  const path = `${apiRoutes.USERS.ARCHIVED}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, {\n      archived: true\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst activeUser = async (params = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    _id,\n    active\n  } = params.user;\n  const method = \"PUT\";\n  const path = `${apiRoutes.USERS.ACTIVE}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, {\n      active: !active\n    });\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst saveAssist = async (props = {}, {\n  onSuccess,\n  onError,\n  onFinally\n} = {}) => {\n  const {\n    userId\n  } = props;\n  const method = \"POST\";\n  const path = `${apiRoutes.ASSIST.SAVE}/${userId}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst validateSessionUser = async ({\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.USERS.VALIDATE}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    } // onError();\n\n  }\n};\n\nconst validateSessionRoot = async ({\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.ROOT.VALIDATE}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    } // onError();\n\n  }\n};\n\nconst getUsers = async ({\n  onSuccess,\n  onError\n} = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.USERS.ALL}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nexport { getUser, getUsers, saveUser, deleteUser, archivedUser, activeUser, saveAssist, validateSessionUser, validateSessionRoot };","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/users/requests.js"],"names":["customFetch","FetchJson","apiRoutes","saveUser","props","onSuccess","onError","onFinally","userId","method","path","USERS","SAVE_DATA","request","response","json","error","process","env","NODE_ENV","console","log","getUser","GET_DATA","deleteUser","params","CATEGORIES","DELETE_CATEGORY","body","URLSearchParams","archivedUser","_id","user","ARCHIVED","archived","activeUser","active","ACTIVE","saveAssist","ASSIST","SAVE","validateSessionUser","VALIDATE","validateSessionRoot","ROOT","getUsers","ALL"],"mappings":"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","sourcesContent":["import { customFetch, FetchJson } from \"../../helpers/fetch\";\nimport { apiRoutes } from \"../../constants/routes\";\n\nconst saveUser = async (props = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { userId } = props;\n  const method = userId ? \"PUT\" : \"POST\";\n  const path = userId ? `${apiRoutes.USERS.SAVE_DATA}/${userId}` : `${apiRoutes.USERS.SAVE_DATA}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst getUser = async (userId = 0, { onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.USERS.GET_DATA}/${userId}`, \"GET\");\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nconst deleteUser = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  try {\n    const request = await customFetch(apiRoutes.CATEGORIES.DELETE_CATEGORY, {\n      method: \"POST\",\n      body: new URLSearchParams(params),\n    });\n\n    const response = await request.json();\n\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst archivedUser = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { _id } = params.user;\n  const method = \"PUT\";\n  const path = `${apiRoutes.USERS.ARCHIVED}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, { archived: true });\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst activeUser = async (params = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { _id, active } = params.user;\n  const method = \"PUT\";\n  const path = `${apiRoutes.USERS.ACTIVE}/${_id}`;\n\n  try {\n    const request = await FetchJson(path, method, { active: !active });\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst saveAssist = async (props = {}, { onSuccess, onError, onFinally } = {}) => {\n  const { userId } = props;\n  const method = \"POST\";\n  const path = `${apiRoutes.ASSIST.SAVE}/${userId}`;\n\n  try {\n    const request = await FetchJson(path, method, props);\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  } finally {\n    onFinally();\n  }\n};\n\nconst validateSessionUser = async ({ onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.USERS.VALIDATE}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    // onError();\n  }\n};\n\nconst validateSessionRoot = async ({ onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.ROOT.VALIDATE}`, \"GET\");\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    // onError();\n  }\n};\n\nconst getUsers = async ({ onSuccess, onError } = {}) => {\n  try {\n    const request = await FetchJson(`${apiRoutes.USERS.ALL}`, \"GET\");\n\n    const response = await request.json();\n    onSuccess(response);\n  } catch (error) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(error);\n    }\n\n    onError();\n  }\n};\n\nexport {\n  getUser,\n  getUsers,\n  saveUser,\n  deleteUser,\n  archivedUser,\n  activeUser,\n  saveAssist,\n  validateSessionUser,\n  validateSessionRoot,\n};\n"]},"metadata":{},"sourceType":"module"}