{"ast":null,"code":"import { getToken } from \"../utils/localStorage\";\nexport const customFetch = (url, data = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    Authorization: getToken()\n  }\n}) => {\n  const finalData = Object.assign(data);\n  return fetch(url, finalData);\n};\nexport const FetchJson = (url, method = \"GET\", params = {}) => {\n  const data = method === \"GET\" ? {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: getToken()\n    }\n  } : {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: getToken()\n    },\n    body: JSON.stringify(params)\n  };\n  const finalData = Object.assign(data);\n  return fetch(url, finalData);\n};\n_c = FetchJson;\nexport const FetchJsonMultipart = (url, method = \"GET\", params = {}) => {\n  const data = method === \"GET\" ? {\n    method,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Accept: \"application/json\",\n      Authorization: getToken()\n    }\n  } : {\n    method,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Accept: \"application/json\",\n      Authorization: getToken()\n    },\n    body: JSON.stringify(params)\n  };\n  const finalData = Object.assign(data);\n  return fetch(url, finalData);\n};\n_c2 = FetchJsonMultipart;\nexport const FetchJsonWithouToken = (url, method = \"GET\", params = {}) => {\n  const data = method === \"GET\" ? {\n    method\n  } : {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: getToken()\n    },\n    body: JSON.stringify(params)\n  };\n  const finalData = Object.assign(data);\n  return fetch(url, finalData);\n};\n_c3 = FetchJsonWithouToken;\nexport const FetchGrid = (url, method = \"GET\", params = {}) => {\n  const data = method === \"GET\" ? {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: getToken()\n    }\n  } : {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: getToken()\n    },\n    body: params\n  };\n  const finalData = Object.assign(data);\n  return fetch(url, finalData);\n};\n/*\nconst createCustomHeaders = () => {\n  const { appInformation } = window._KOMET_REACT_APP;\n\n  const CUSTOM_HEADERS = {\n    \"X-SESSION-TOKEN-US\": appInformation.focusData,\n    \"X-SESSION-TOKEN-CP\": appInformation.focusValue,\n    \"X-SESSION-TOKEN-GW\": appInformation.focusValueGw,\n    \"X-SESSION-TOKEN-CU\": appInformation.focusValueCu,\n  };\n\n  const token = document.querySelector(\"meta[name='_csrf']\").getAttribute(\"content\");\n  const header = document.querySelector(\"meta[name='_csrf_header']\").getAttribute(\"content\");\n\n  CUSTOM_HEADERS[header] = token;\n\n  return CUSTOM_HEADERS;\n};\n*/\n\n_c4 = FetchGrid;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"FetchJson\");\n$RefreshReg$(_c2, \"FetchJsonMultipart\");\n$RefreshReg$(_c3, \"FetchJsonWithouToken\");\n$RefreshReg$(_c4, \"FetchGrid\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/helpers/fetch.js"],"names":["getToken","customFetch","url","data","headers","Accept","Authorization","finalData","Object","assign","fetch","FetchJson","method","params","body","JSON","stringify","FetchJsonMultipart","FetchJsonWithouToken","FetchGrid"],"mappings":"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","sourcesContent":["import { getToken } from \"../utils/localStorage\";\n\nexport const customFetch = (\n  url,\n  data = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: getToken(),\n    },\n  }\n) => {\n  const finalData = Object.assign(data);\n\n  return fetch(url, finalData);\n};\n\nexport const FetchJson = (url, method = \"GET\", params = {}) => {\n  const data =\n    method === \"GET\"\n      ? {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: getToken(),\n          },\n        }\n      : {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: getToken(),\n          },\n          body: JSON.stringify(params),\n        };\n\n  const finalData = Object.assign(data);\n\n  return fetch(url, finalData);\n};\n\nexport const FetchJsonMultipart = (url, method = \"GET\", params = {}) => {\n  const data =\n    method === \"GET\"\n      ? {\n          method,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Accept: \"application/json\",\n            Authorization: getToken(),\n          },\n        }\n      : {\n          method,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Accept: \"application/json\",\n            Authorization: getToken(),\n          },\n          body: JSON.stringify(params),\n        };\n\n  const finalData = Object.assign(data);\n\n  return fetch(url, finalData);\n};\n\nexport const FetchJsonWithouToken = (url, method = \"GET\", params = {}) => {\n  const data =\n    method === \"GET\"\n      ? {\n          method,\n        }\n      : {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: getToken(),\n          },\n          body: JSON.stringify(params),\n        };\n\n  const finalData = Object.assign(data);\n\n  return fetch(url, finalData);\n};\n\nexport const FetchGrid = (url, method = \"GET\", params = {}) => {\n  const data =\n    method === \"GET\"\n      ? {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: getToken(),\n          },\n        }\n      : {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: getToken(),\n          },\n          body: params,\n        };\n\n  const finalData = Object.assign(data);\n\n  return fetch(url, finalData);\n};\n/*\nconst createCustomHeaders = () => {\n  const { appInformation } = window._KOMET_REACT_APP;\n\n  const CUSTOM_HEADERS = {\n    \"X-SESSION-TOKEN-US\": appInformation.focusData,\n    \"X-SESSION-TOKEN-CP\": appInformation.focusValue,\n    \"X-SESSION-TOKEN-GW\": appInformation.focusValueGw,\n    \"X-SESSION-TOKEN-CU\": appInformation.focusValueCu,\n  };\n\n  const token = document.querySelector(\"meta[name='_csrf']\").getAttribute(\"content\");\n  const header = document.querySelector(\"meta[name='_csrf_header']\").getAttribute(\"content\");\n\n  CUSTOM_HEADERS[header] = token;\n\n  return CUSTOM_HEADERS;\n};\n*/\n"]},"metadata":{},"sourceType":"module"}