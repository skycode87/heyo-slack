{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/bucket/components/ManageBucketModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { Form, Row, Col, Spin, Upload } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { saveImageBucket } from \"../requests\";\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport BaseModal from \"../../shared/components/Modal/BaseModal\";\nimport { setBucketRedux } from \"../../../redux/bucket\";\nimport { globals, routes, numbers } from \"../../../constants/globals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Dragger\n} = Upload;\nconst defaultValues = {\n  appId: null,\n  amount: 0,\n  userId: null\n};\n\nconst ManageBucketModal = ({\n  entityId,\n  bucketId,\n  setBucketId,\n  openModal,\n  closeModal,\n  refetch,\n  entityProp,\n  typeProp\n}) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    currentSession\n  } = useSelector(store => store.session);\n  const [selectedBucket, setSelectedBucket] = useState(defaultValues);\n  const [form] = Form.useForm();\n  const [loaderForm, setLoaderForm] = useState(false);\n  const [mode, setMode] = useState(null);\n  const [reload, setReload] = useState(0);\n  const [entity, setEntity] = useState(\"App\");\n  const [type, setType] = useState(\"Avatar\");\n\n  const handleReset = () => {\n    setSelectedBucket(defaultValues);\n    setReload(Math.floor(Math.random() * 100000));\n  };\n\n  useEffect(() => {\n    if (entityProp) {\n      setEntity(entityProp);\n    }\n  }, [entityProp]);\n  useEffect(() => {\n    if (typeProp) {\n      setType(typeProp);\n    }\n  }, [typeProp]);\n  useEffect(() => {\n    if (openModal) {\n      if (bucketId) {\n        setMode(\"edit\");\n      } else {\n        setMode(\"new\");\n      }\n    } else {\n      handleReset();\n      setMode(null);\n      setBucketId(null);\n    }\n  }, [openModal]);\n  useEffect(() => {\n    if (mode === \"new\") {\n      handleReset();\n    }\n  }, [mode]);\n\n  const handleCloseModal = () => {\n    refetch();\n    closeModal();\n  };\n\n  const props = {\n    name: \"picture\",\n    action: `${routes.API_BUCKET}/${currentSession === null || currentSession === void 0 ? void 0 : currentSession.instanceId}/${entity}/${entityId}/${type}`,\n    headers: {}\n  };\n\n  const onChange = info => {\n    saveImageBucket(info, {\n      onSuccess: () => {\n        showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      onFinally: () => handleCloseModal()\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    isOpenModal: openModal,\n    closeModal: handleCloseModal,\n    onCancel: handleCloseModal,\n    onConfirm: () => {},\n    title: \"Subir una imagen\",\n    width: 1000,\n    confirmText: t(\"save\"),\n    isCloseModal: true,\n    top: 70,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"manage-category-form-modal\",\n      initialValues: defaultValues,\n      className: \"manage-modal\",\n      onFinish: () => {},\n      labelCol: {\n        span: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layout-form-modal entity-200 entity-small\",\n        children: loaderForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Spin, {\n            tip: t(\"loading\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 16,\n            style: {\n              paddingTop: 10,\n              marginTop: 10,\n              borderRadius: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: [/*#__PURE__*/_jsxDEV(Dragger, { ...props,\n                onChange: onChange,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"ant-upload-drag-icon\",\n                  children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"ant-upload-text\",\n                  children: \"Click or drag file to this area to upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"ant-upload-hint\",\n                  children: \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), \",\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageBucketModal, \"EZjeH+uN2VRU9Ao+G8H9TLU5IVg=\", false, function () {\n  return [useTranslation, useDispatch, useSelector, Form.useForm];\n});\n\n_c = ManageBucketModal;\nManageBucketModal.propTypes = {\n  entityId: PropTypes.number,\n  bucketId: PropTypes.number,\n  setBucketId: PropTypes.func,\n  openModal: PropTypes.func,\n  closeModal: PropTypes.func,\n  refetch: PropTypes.func\n};\nManageBucketModal.defaultProps = {\n  entityId: null,\n  bucketId: null,\n  refetch: () => {},\n  setBucketId: () => {}\n};\nexport default ManageBucketModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageBucketModal\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/bucket/components/ManageBucketModal.js"],"names":["useState","useEffect","useSelector","useDispatch","useTranslation","PropTypes","Form","Row","Col","Spin","Upload","InboxOutlined","saveImageBucket","showGlobalNotification","BaseModal","setBucketRedux","globals","routes","numbers","Dragger","defaultValues","appId","amount","userId","ManageBucketModal","entityId","bucketId","setBucketId","openModal","closeModal","refetch","entityProp","typeProp","t","i18n","dispatch","currentSession","store","session","selectedBucket","setSelectedBucket","form","useForm","loaderForm","setLoaderForm","mode","setMode","reload","setReload","entity","setEntity","type","setType","handleReset","Math","floor","random","handleCloseModal","props","name","action","API_BUCKET","instanceId","headers","onChange","info","onSuccess","onError","onFinally","span","paddingTop","marginTop","borderRadius","propTypes","number","func","defaultProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n\nimport PropTypes from \"prop-types\";\n\nimport { Form, Row, Col, Spin, Upload } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { saveImageBucket } from \"../requests\";\n\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport BaseModal from \"../../shared/components/Modal/BaseModal\";\nimport { setBucketRedux } from \"../../../redux/bucket\";\nimport { globals, routes, numbers } from \"../../../constants/globals\";\n\nconst { Dragger } = Upload;\n\nconst defaultValues = {\n  appId: null,\n  amount: 0,\n  userId: null,\n};\n\nconst ManageBucketModal = ({\n  entityId,\n  bucketId,\n  setBucketId,\n  openModal,\n  closeModal,\n  refetch,\n  entityProp,\n  typeProp,\n}) => {\n  const { t, i18n } = useTranslation();\n\n  const dispatch = useDispatch();\n  const { currentSession } = useSelector((store) => store.session);\n\n  const [selectedBucket, setSelectedBucket] = useState(defaultValues);\n  const [form] = Form.useForm();\n  const [loaderForm, setLoaderForm] = useState(false);\n  const [mode, setMode] = useState(null);\n  const [reload, setReload] = useState(0);\n  const [entity, setEntity] = useState(\"App\");\n  const [type, setType] = useState(\"Avatar\");\n\n  const handleReset = () => {\n    setSelectedBucket(defaultValues);\n    setReload(Math.floor(Math.random() * 100000));\n  };\n\n  useEffect(() => {\n    if (entityProp) {\n      setEntity(entityProp);\n    }\n  }, [entityProp]);\n\n  useEffect(() => {\n    if (typeProp) {\n      setType(typeProp);\n    }\n  }, [typeProp]);\n\n  useEffect(() => {\n    if (openModal) {\n      if (bucketId) {\n        setMode(\"edit\");\n      } else {\n        setMode(\"new\");\n      }\n    } else {\n      handleReset();\n      setMode(null);\n      setBucketId(null);\n    }\n  }, [openModal]);\n\n  useEffect(() => {\n    if (mode === \"new\") {\n      handleReset();\n    }\n  }, [mode]);\n\n  const handleCloseModal = () => {\n    refetch();\n    closeModal();\n  };\n\n  const props = {\n    name: \"picture\",\n    action: `${routes.API_BUCKET}/${currentSession?.instanceId}/${entity}/${entityId}/${type}`,\n    headers: {},\n  };\n\n  const onChange = (info) => {\n    saveImageBucket(info, {\n      onSuccess: () => {\n        showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      onFinally: () => handleCloseModal(),\n    });\n  };\n\n  return (\n    <BaseModal\n      isOpenModal={openModal}\n      closeModal={handleCloseModal}\n      onCancel={handleCloseModal}\n      onConfirm={() => {}}\n      title=\"Subir una imagen\"\n      width={1000}\n      confirmText={t(\"save\")}\n      isCloseModal\n      top={70}\n    >\n      <Form\n        form={form}\n        name=\"manage-category-form-modal\"\n        initialValues={defaultValues}\n        className=\"manage-modal\"\n        onFinish={() => {}}\n        labelCol={{ span: 24 }}\n      >\n        <div className=\"layout-form-modal entity-200 entity-small\">\n          {loaderForm ? (\n            <>\n              <Spin tip={t(\"loading\")} />\n            </>\n          ) : (\n            <>\n              <Row gutter={16} style={{ paddingTop: 10, marginTop: 10, borderRadius: 5 }}>\n                <Col span={24}>\n                  <Dragger {...props} onChange={onChange}>\n                    <p className=\"ant-upload-drag-icon\">\n                      <InboxOutlined />\n                    </p>\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                    <p className=\"ant-upload-hint\">\n                      Support for a single or bulk upload. Strictly prohibit from uploading company data or other band\n                      files\n                    </p>\n                  </Dragger>\n                  ,\n                </Col>\n              </Row>\n            </>\n          )}\n        </div>\n      </Form>\n    </BaseModal>\n  );\n};\n\nManageBucketModal.propTypes = {\n  entityId: PropTypes.number,\n  bucketId: PropTypes.number,\n  setBucketId: PropTypes.func,\n  openModal: PropTypes.func,\n  closeModal: PropTypes.func,\n  refetch: PropTypes.func,\n};\n\nManageBucketModal.defaultProps = {\n  entityId: null,\n  bucketId: null,\n  refetch: () => {},\n  setBucketId: () => {},\n};\n\nexport default ManageBucketModal;\n"]},"metadata":{},"sourceType":"module"}