{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/users/components/SelectModalApp.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Menu } from \"antd\";\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport BaseModal from \"../../shared/components/Modal/BaseModal\";\nimport SelectModalApp from \"../../selectModal/containers\";\nimport ManagePlanModal from \"../../selectModal/components/ManagePlanModal\";\nimport { saveAppFromUser } from \"../../apps/requests\";\nimport { saveTrans } from \"../../trans/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectModalAppComponent = ({\n  getUser,\n  userId,\n  openModal,\n  closeModal,\n  refetch,\n  initialValues,\n  selectedUser,\n  setReloadApp\n}) => {\n  _s();\n\n  const [selectedRow, setSelectedRow] = useState({\n    name: \"\"\n  });\n  const [step, setStep] = useState(\"1\");\n  const [formData, setFormData] = useState({\n    userId,\n    observation: \"\"\n  });\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [loaderForm, setLoaderForm] = useState(false);\n  useEffect(() => {\n    if (userId) {\n      setLoaderForm(true);\n      getUser(userId, {\n        onSuccess: response => {\n          setSelectedRow(response.user);\n          setLoaderForm(false);\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\"))\n      });\n    } else {\n      setSelectedRow(initialValues);\n    }\n  }, [userId]);\n\n  const handleCloseModal = () => {\n    refetch();\n    closeModal();\n  };\n\n  const details = data => {\n    setStep(\"2\");\n    setFormData({ ...formData,\n      ...data,\n      planId: data._id,\n      userId: selectedUser\n    });\n    setSelectedRow(data);\n  };\n\n  const handleClick = e => {\n    // eslint-disable-next-line no-unused-expressions\n    e.key === \"1\" && setStep(e.key);\n  };\n\n  const submitData = () => {\n    saveAppFromUser(formData, {\n      onSuccess: response => {\n        showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n        saveTrans(formData, {\n          onSuccess: response2 => {\n            showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcessPayment\"));\n            setReloadApp(Math.floor(Math.random() * 1000000));\n          },\n          onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n          onFinally: () => closeModal()\n        });\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      onFinally: () => closeModal()\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    isOpenModal: openModal,\n    closeModal: handleCloseModal,\n    onCancel: handleCloseModal,\n    onConfirm: () => submitData(),\n    title: `Cliente: ${selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.firstname} ${selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.lastname}`,\n    width: 800,\n    confirmText: t(\"save\"),\n    isCloseModal: true,\n    top: 50,\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      onClick: handleClick,\n      selectedKeys: [step],\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        icon: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 34\n        }, this),\n        children: \"Seleccion el plan\"\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        icon: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 34\n        }, this),\n        children: \"Llene el formulario\"\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [step === \"1\" && /*#__PURE__*/_jsxDEV(SelectModalApp, {\n        details: details,\n        selectedUser: selectedRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 26\n      }, this), step === \"2\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ManagePlanModal, {\n          setFormData: setFormData,\n          formData: formData,\n          dataRow: selectedRow,\n          t: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectModalAppComponent, \"OJrQthsuY5XMTxB36pm4tSeGJiM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SelectModalAppComponent;\nSelectModalAppComponent.defaultProps = {\n  setUserId: () => {}\n};\nexport default SelectModalAppComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectModalAppComponent\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/users/components/SelectModalApp.js"],"names":["useState","useEffect","Menu","MailOutlined","useTranslation","showGlobalNotification","BaseModal","SelectModalApp","ManagePlanModal","saveAppFromUser","saveTrans","SelectModalAppComponent","getUser","userId","openModal","closeModal","refetch","initialValues","selectedUser","setReloadApp","selectedRow","setSelectedRow","name","step","setStep","formData","setFormData","observation","t","i18n","loaderForm","setLoaderForm","onSuccess","response","user","onError","handleCloseModal","details","data","planId","_id","handleClick","e","key","submitData","response2","Math","floor","random","onFinally","firstname","lastname","defaultProps","setUserId"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Menu } from \"antd\";\nimport { MailOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\n\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport BaseModal from \"../../shared/components/Modal/BaseModal\";\nimport SelectModalApp from \"../../selectModal/containers\";\nimport ManagePlanModal from \"../../selectModal/components/ManagePlanModal\";\nimport { saveAppFromUser } from \"../../apps/requests\";\nimport { saveTrans } from \"../../trans/requests\";\n\nconst SelectModalAppComponent = ({\n  getUser,\n  userId,\n  openModal,\n  closeModal,\n  refetch,\n  initialValues,\n  selectedUser,\n  setReloadApp,\n}) => {\n  const [selectedRow, setSelectedRow] = useState({ name: \"\" });\n  const [step, setStep] = useState(\"1\");\n  const [formData, setFormData] = useState({ userId, observation: \"\" });\n  const { t, i18n } = useTranslation();\n\n  const [loaderForm, setLoaderForm] = useState(false);\n\n  useEffect(() => {\n    if (userId) {\n      setLoaderForm(true);\n      getUser(userId, {\n        onSuccess: (response) => {\n          setSelectedRow(response.user);\n          setLoaderForm(false);\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      });\n    } else {\n      setSelectedRow(initialValues);\n    }\n  }, [userId]);\n\n  const handleCloseModal = () => {\n    refetch();\n    closeModal();\n  };\n\n  const details = (data) => {\n    setStep(\"2\");\n    setFormData({ ...formData, ...data, planId: data._id, userId: selectedUser });\n    setSelectedRow(data);\n  };\n\n  const handleClick = (e) => {\n    // eslint-disable-next-line no-unused-expressions\n    e.key === \"1\" && setStep(e.key);\n  };\n\n  const submitData = () => {\n    saveAppFromUser(formData, {\n      onSuccess: (response) => {\n        showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n        saveTrans(formData, {\n          onSuccess: (response2) => {\n            showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcessPayment\"));\n            setReloadApp(Math.floor(Math.random() * 1000000));\n          },\n          onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n          onFinally: () => closeModal(),\n        });\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      onFinally: () => closeModal(),\n    });\n  };\n\n  return (\n    <BaseModal\n      isOpenModal={openModal}\n      closeModal={handleCloseModal}\n      onCancel={handleCloseModal}\n      onConfirm={() => submitData()}\n      title={`Cliente: ${selectedUser?.firstname} ${selectedUser?.lastname}`}\n      width={800}\n      confirmText={t(\"save\")}\n      isCloseModal\n      top={50}\n    >\n      <Menu onClick={handleClick} selectedKeys={[step]} mode=\"horizontal\">\n        <Menu.Item key=\"1\" icon={<MailOutlined />}>\n          Seleccion el plan\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<MailOutlined />}>\n          Llene el formulario\n        </Menu.Item>\n      </Menu>\n      <>\n        {step === \"1\" && <SelectModalApp details={details} selectedUser={selectedRow} />}\n        {step === \"2\" && (\n          <>\n            <ManagePlanModal setFormData={setFormData} formData={formData} dataRow={selectedRow} t={t} />\n          </>\n        )}\n      </>\n    </BaseModal>\n  );\n};\n\nSelectModalAppComponent.defaultProps = {\n  setUserId: () => {},\n};\n\nexport default SelectModalAppComponent;\n"]},"metadata":{},"sourceType":"module"}