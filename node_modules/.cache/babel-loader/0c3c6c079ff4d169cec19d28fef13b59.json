{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/bucket/components/ManageBucketModal2.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport debounce from \"lodash/debounce\";\nimport { Form, Row, Col, Input, Select, Spin, Switch } from \"antd\";\nimport { updateBucket, getBucket } from \"../requests\";\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport BaseModal from \"../../shared/components/Modal/BaseModal\";\nimport { setBucketRedux } from \"../../../redux/bucket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\nconst defaultValues = {\n  title: \"\",\n  description: \"\",\n  type: \"\",\n  active: \"\",\n  public: \"\"\n};\n\nconst ManageBucketModal = ({\n  bucketId,\n  openModal,\n  closeModal,\n  refetch,\n  setBucketId\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionStoreRedux = useSelector(store => store.session);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [selectedBucket, setSelectedBucket] = useState(defaultValues);\n  const [form] = Form.useForm();\n  const [loaderForm, setLoaderForm] = useState(false);\n  const [mode, setMode] = useState(null);\n  const [reload, setReload] = useState(0);\n\n  const handleReset = () => {\n    setSelectedBucket(defaultValues);\n    setReload(Math.floor(Math.random() * 100000));\n  };\n\n  useEffect(() => {\n    if (openModal) {\n      if (bucketId) {\n        setMode(\"edit\");\n      } else {\n        setMode(\"new\");\n      }\n    } else {\n      handleReset();\n      setMode(null);\n      setBucketId(null);\n    }\n  }, [openModal]);\n  useEffect(() => {\n    if (mode === \"new\") {\n      handleReset();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (mode === \"edit\") {\n      setLoaderForm(true);\n      getBucket(bucketId, {\n        onSuccess: response => {\n          setBucketRedux(response.result)(dispatch);\n          setSelectedBucket({ ...response.result\n          });\n          setLoaderForm(false);\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\"))\n      });\n    }\n  }, [mode]);\n  useEffect(() => {\n    form.setFieldsValue(selectedBucket);\n  }, [form, selectedBucket]);\n\n  const handleCloseModal = () => {\n    refetch();\n    closeModal();\n  };\n\n  const onFinish = values => {\n    const data = { ...selectedBucket,\n      ...values\n    };\n    updateBucket({ ...data,\n      bucketId,\n      rootId: sessionStoreRedux.currentSession_id\n    }, {\n      onSuccess: response => {\n        setBucketRedux(response.result)(dispatch);\n        showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      onFinally: () => handleCloseModal()\n    });\n  };\n\n  const onValuesChange = debounce(values => {\n    setSelectedBucket({ ...selectedBucket,\n      ...values\n    });\n  }, 500);\n\n  const handleSubmit = () => {\n    form.validateFields().then(() => {\n      form.submit();\n    });\n  };\n\n  const handleActive = checked => {\n    setSelectedBucket({ ...selectedBucket,\n      active: checked\n    });\n  };\n\n  const handlePublic = checked => {\n    setSelectedBucket({ ...selectedBucket,\n      public: checked\n    });\n  };\n\n  const config = {\n    rules: [{\n      type: \"object\",\n      required: true,\n      message: \"Please select time!\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    isOpenModal: openModal,\n    closeModal: handleCloseModal,\n    onCancel: handleCloseModal,\n    onConfirm: () => handleSubmit(),\n    title: bucketId ? \"Editar Bucket\" : \"Nuevo Bucket\",\n    width: 1000,\n    confirmText: t(\"save\"),\n    isCloseModal: true,\n    top: 70,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"manage-category-form-modal\",\n      initialValues: defaultValues,\n      className: \"manage-modal\",\n      onFinish: onFinish,\n      labelCol: {\n        span: 24\n      },\n      onValuesChange: onValuesChange,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layout-form-modal entity-300 entity-small\",\n        children: loaderForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Spin, {\n            tip: t(\"loading\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            gutter: 15,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 16,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"title\",\n                tooltip: \"Firstname here pleaseio\",\n                label: t(\"title\"),\n                rules: [{\n                  required: true,\n                  message: `Por favor ingrese el nombre`\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"\",\n                  value: selectedBucket === null || selectedBucket === void 0 ? void 0 : selectedBucket.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 4,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"type\",\n                label: t(\"type\"),\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  className: \"select-form-modal\",\n                  children: [/*#__PURE__*/_jsxDEV(Option, {\n                    value: \"Avatar\",\n                    children: \"Avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Option, {\n                    value: \"Cover\",\n                    children: \"Cover\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Option, {\n                    value: \"Gallery\",\n                    children: \"Gallery\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 2,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"public\",\n                labelAlign: \"right\",\n                label: t(\"public\"),\n                children: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: !!(selectedBucket === null || selectedBucket === void 0 ? void 0 : selectedBucket.public),\n                  onChange: handlePublic\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 2,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"active\",\n                labelAlign: \"right\",\n                label: t(\"active\"),\n                children: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: !!(selectedBucket === null || selectedBucket === void 0 ? void 0 : selectedBucket.active),\n                  onChange: handleActive\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 16,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"description\",\n                label: t(\"description\"),\n                children: /*#__PURE__*/_jsxDEV(TextArea, {\n                  showCount: \"true\",\n                  onResize: \"false\",\n                  value: selectedBucket === null || selectedBucket === void 0 ? void 0 : selectedBucket.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageBucketModal, \"qJVAGGWls1zWnYr5LyDpMTknAxE=\", false, function () {\n  return [useDispatch, useSelector, useTranslation, Form.useForm];\n});\n\n_c = ManageBucketModal;\nManageBucketModal.defaultProps = {\n  setBucketId: () => {}\n};\nexport default ManageBucketModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageBucketModal\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/bucket/components/ManageBucketModal2.js"],"names":["useState","useEffect","useSelector","useDispatch","useTranslation","debounce","Form","Row","Col","Input","Select","Spin","Switch","updateBucket","getBucket","showGlobalNotification","BaseModal","setBucketRedux","TextArea","Option","defaultValues","title","description","type","active","public","ManageBucketModal","bucketId","openModal","closeModal","refetch","setBucketId","dispatch","sessionStoreRedux","store","session","t","i18n","selectedBucket","setSelectedBucket","form","useForm","loaderForm","setLoaderForm","mode","setMode","reload","setReload","handleReset","Math","floor","random","onSuccess","response","result","onError","setFieldsValue","handleCloseModal","onFinish","values","data","rootId","currentSession_id","onFinally","onValuesChange","handleSubmit","validateFields","then","submit","handleActive","checked","handlePublic","config","rules","required","message","span","defaultProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n\nimport debounce from \"lodash/debounce\";\n\nimport { Form, Row, Col, Input, Select, Spin, Switch } from \"antd\";\nimport { updateBucket, getBucket } from \"../requests\";\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport BaseModal from \"../../shared/components/Modal/BaseModal\";\nimport { setBucketRedux } from \"../../../redux/bucket\";\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst defaultValues = {\n  title: \"\",\n  description: \"\",\n  type: \"\",\n  active: \"\",\n  public: \"\",\n};\n\nconst ManageBucketModal = ({ bucketId, openModal, closeModal, refetch, setBucketId }) => {\n  const dispatch = useDispatch();\n  const sessionStoreRedux = useSelector((store) => store.session);\n  const { t, i18n } = useTranslation();\n\n  const [selectedBucket, setSelectedBucket] = useState(defaultValues);\n  const [form] = Form.useForm();\n  const [loaderForm, setLoaderForm] = useState(false);\n  const [mode, setMode] = useState(null);\n  const [reload, setReload] = useState(0);\n\n  const handleReset = () => {\n    setSelectedBucket(defaultValues);\n    setReload(Math.floor(Math.random() * 100000));\n  };\n\n  useEffect(() => {\n    if (openModal) {\n      if (bucketId) {\n        setMode(\"edit\");\n      } else {\n        setMode(\"new\");\n      }\n    } else {\n      handleReset();\n      setMode(null);\n      setBucketId(null);\n    }\n  }, [openModal]);\n\n  useEffect(() => {\n    if (mode === \"new\") {\n      handleReset();\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    if (mode === \"edit\") {\n      setLoaderForm(true);\n      getBucket(bucketId, {\n        onSuccess: (response) => {\n          setBucketRedux(response.result)(dispatch);\n          setSelectedBucket({\n            ...response.result,\n          });\n          setLoaderForm(false);\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      });\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    form.setFieldsValue(selectedBucket);\n  }, [form, selectedBucket]);\n\n  const handleCloseModal = () => {\n    refetch();\n    closeModal();\n  };\n\n  const onFinish = (values) => {\n    const data = { ...selectedBucket, ...values };\n    updateBucket(\n      {\n        ...data,\n        bucketId,\n        rootId: sessionStoreRedux.currentSession_id,\n      },\n      {\n        onSuccess: (response) => {\n          setBucketRedux(response.result)(dispatch);\n          showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n        onFinally: () => handleCloseModal(),\n      }\n    );\n  };\n\n  const onValuesChange = debounce((values) => {\n    setSelectedBucket({ ...selectedBucket, ...values });\n  }, 500);\n\n  const handleSubmit = () => {\n    form.validateFields().then(() => {\n      form.submit();\n    });\n  };\n\n  const handleActive = (checked) => {\n    setSelectedBucket({ ...selectedBucket, active: checked });\n  };\n\n  const handlePublic = (checked) => {\n    setSelectedBucket({ ...selectedBucket, public: checked });\n  };\n\n  const config = {\n    rules: [\n      {\n        type: \"object\",\n        required: true,\n        message: \"Please select time!\",\n      },\n    ],\n  };\n  return (\n    <BaseModal\n      isOpenModal={openModal}\n      closeModal={handleCloseModal}\n      onCancel={handleCloseModal}\n      onConfirm={() => handleSubmit()}\n      title={bucketId ? \"Editar Bucket\" : \"Nuevo Bucket\"}\n      width={1000}\n      confirmText={t(\"save\")}\n      isCloseModal\n      top={70}\n    >\n      <Form\n        form={form}\n        name=\"manage-category-form-modal\"\n        initialValues={defaultValues}\n        className=\"manage-modal\"\n        onFinish={onFinish}\n        labelCol={{ span: 24 }}\n        onValuesChange={onValuesChange}\n      >\n        <div className=\"layout-form-modal entity-300 entity-small\">\n          {loaderForm ? (\n            <>\n              <Spin tip={t(\"loading\")} />\n            </>\n          ) : (\n            <>\n              <Row gutter={15}>\n                <Col span={16}>\n                  <Form.Item\n                    name=\"title\"\n                    tooltip=\"Firstname here pleaseio\"\n                    label={t(\"title\")}\n                    rules={[\n                      {\n                        required: true,\n                        message: `Por favor ingrese el nombre`,\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"\" value={selectedBucket?.title} />\n                  </Form.Item>\n                </Col>\n                <Col span={4}>\n                  <Form.Item name=\"type\" label={t(\"type\")}>\n                    <Select className=\"select-form-modal\">\n                      <Option value=\"Avatar\">Avatar</Option>\n                      <Option value=\"Cover\">Cover</Option>\n                      <Option value=\"Gallery\">Gallery</Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span={2}>\n                  <Form.Item name=\"public\" labelAlign=\"right\" label={t(\"public\")}>\n                    <Switch checked={!!selectedBucket?.public} onChange={handlePublic} />\n                  </Form.Item>\n                </Col>\n                <Col span={2}>\n                  <Form.Item name=\"active\" labelAlign=\"right\" label={t(\"active\")}>\n                    <Switch checked={!!selectedBucket?.active} onChange={handleActive} />\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row gutter={16}>\n                <Col span={24}>\n                  <Form.Item name=\"description\" label={t(\"description\")}>\n                    <TextArea showCount=\"true\" onResize=\"false\" value={selectedBucket?.description} />\n                  </Form.Item>\n                </Col>\n              </Row>\n            </>\n          )}\n        </div>\n      </Form>\n    </BaseModal>\n  );\n};\n\nManageBucketModal.defaultProps = {\n  setBucketId: () => {},\n};\n\nexport default ManageBucketModal;\n"]},"metadata":{},"sourceType":"module"}