{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/plans/containers/Plans.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Drawer, Button } from \"antd\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { useSelector, useDispatch } from \"react-redux\"; // COMPONENTS\n\nimport ActionBar from \"../../shared/components/ActionBar\";\nimport PlansTable from \"../components/PlansTable\";\nimport SearchPlansForm from \"../components/SearchPlansForm\";\nimport ActionsUsers from \"../components/ActionsPlans\";\nimport ManagePlanModal2 from \"../components/ManagePlanModal2\";\nimport ManagePlanLinkModal from \"../components/ManagePlanLinkModal\";\nimport AddUserButton from \"../components/AddPlanButton\";\nimport PlanHeader from \"../components/PlanHeader\";\nimport PlansHeader from \"../components/PlansHeader\";\nimport ManagePlanContentModal from \"../components/ManagePlanContentModal\";\nimport PlansCard from \"../components/PlansCard\";\nimport DrawerPlan from \"../components/DrawerPlan\";\nimport ManageBucketModal from \"../../bucket/components/ManageBucketModal\"; // HELPERS\n\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\"; // REDUX\n\nimport { setPlan, setPlanRedux } from \"../../../redux/plan\"; // REQUEST\n\nimport { getPlan, archivedPlan, activePlan } from \"../requests\"; // HOOKS\n\nimport usePlans from \"../hooks/usePlans\";\nimport useModal from \"../../shared/hooks/useModal\"; // CONTAINERS\n\nimport TransContainer from \"../../trans/containers/Trans\";\nimport AppsContainer from \"../../apps/containers/Apps\";\nimport BucketContainer from \"../../bucket/containers/Buckets\"; // CONSTANTS\n\nimport { globals, numbers } from \"../../../constants/globals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Plans = ({\n  isEmbed = false,\n  appId = null,\n  packId = null,\n  userId = null,\n  packData = {}\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const packStoreRedux = useSelector(store => store.pack);\n  const sessionStoreRedux = useSelector(store => store.session);\n  const {\n    plans,\n    filters,\n    setFilters,\n    pagination,\n    setPagination,\n    loading,\n    refetch\n  } = usePlans(appId, packId, userId);\n  const commonProps = {\n    filters,\n    setFilters\n  };\n  const [page, setPage] = useState(globals.PAGE_MAIN);\n  const [subpage, setSubpage] = useState(numbers.ONE);\n  const [selectedPlan, setSelectedPlan] = useState({});\n  const [containerMode, setContainerMode] = useState(\"table\");\n  const [type, setType] = useState(\"TEXT\");\n  const [planId, setPlanId] = useState(null);\n  const [isOpenManagePlansModal, openManagePlansModal, closeManagePlansModal] = useModal();\n  const [isOpenDrawPlan, openDrawPlan, closeDrawPlan] = useModal();\n  const [isOpenManagePlanLinkModal, openManagePlanLinkModal, closeManagePlanLinkModal] = useModal();\n  const [isOpenManagePlanContentModal, openManagePlanContentModal, closeManagePlanContentModal] = useModal();\n  const [isOpenManageBucketModal, openManageBucketModal, closeManageBucketModal] = useModal();\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    duration: \"\",\n    category: \"\",\n    maxLimit: 1,\n    minLimit: 1,\n    observation: \"\",\n    active: true,\n    tag: \"\",\n    price: \"\",\n    avatar: \"\",\n    public: false,\n    startdate: \"2020/01/01\",\n    closuredate: \"2020/01/01\"\n  });\n  useEffect(() => {\n    setPlan(selectedPlan)(dispatch);\n  }, [selectedPlan]);\n\n  const handleEdit = plan => {\n    setSelectedPlan(plan);\n    setPlanId(plan._id);\n    setType(plan.type);\n    console.log(plan.type); // openManagePlansModal();\n\n    openManagePlanLinkModal();\n  };\n\n  const handleNewLinkModal = type1 => {\n    setType(type1);\n\n    if (type1 === \"URL_IMAGE\") {\n      // id # entity # type\n      window.open(`https://lospatioshb.com/file/?code=${packId}${globals.CLUUF}Pack${globals.CLUUF}Avatar${globals.CLUUF}${sessionStoreRedux.currentSession.instanceId}`);\n    } else if (type1 === \"IMAGE\") {\n      openManageBucketModal();\n    } else {\n      openManagePlanLinkModal();\n    }\n  };\n\n  const openDraw = plan => {\n    setPlanId(plan === null || plan === void 0 ? void 0 : plan._id);\n    getPlan(plan === null || plan === void 0 ? void 0 : plan._id, {\n      onSuccess: response => {\n        setSelectedPlan(response.result);\n        setPlanRedux(response.result);\n        openDrawPlan();\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\"))\n    });\n  };\n\n  const handleDetails = plan => {\n    console.log(plan._id);\n\n    if (isEmbed) {\n      openDraw(plan);\n    } else {\n      setPage(globals.PAGE_ONE);\n      setSubpage(numbers.ONE);\n      setPlanId(plan._id);\n      getPlan(plan._id, {\n        onSuccess: response => {\n          setSelectedPlan(response.result);\n          setPlanRedux(response.result);\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\"))\n      });\n    }\n  };\n\n  const handleArchivedConfirm = plan => {\n    archivedPlan({\n      plan\n    }, {\n      onSuccess: response => {\n        refetch();\n        showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      onFinally: () => {}\n    });\n  };\n\n  const handleArchived = plan => {\n    setPlanId(plan._id);\n    confirmAlert({\n      title: `Eliminar ${plan.name}`,\n      message: `Esta seguro que desea eliminar el setting de ${plan.name}?`,\n      buttons: [{\n        label: t(\"yes\"),\n        onClick: () => handleArchivedConfirm(plan)\n      }, {\n        label: t(\"no\"),\n        onClick: () => {}\n      }]\n    });\n  };\n\n  const handleActiveConfirm = plan => {\n    activePlan({\n      plan\n    }, {\n      onSuccess: response => {\n        refetch();\n        showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      onFinally: () => {}\n    });\n  };\n\n  const handleActive = plan => {\n    setPlanId(plan._id);\n    confirmAlert({\n      title: plan.active ? \"Desactivar el Paquete\" : \"Activar el Paquete\",\n      message: \"Esta seguro que desea continuar?\",\n      buttons: [{\n        label: t(\"yes\"),\n        onClick: () => handleActiveConfirm(plan)\n      }, {\n        label: t(\"no\"),\n        onClick: () => {}\n      }]\n    });\n  };\n\n  const handleEditContent = plan => {\n    setSelectedPlan(plan);\n    setPlanId(plan._id);\n    openManagePlanContentModal();\n  };\n\n  const handleAddImage = plan => {\n    setSelectedPlan(plan);\n    setPlanId(plan._id);\n    openManageBucketModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [page === globals.PAGE_MAIN && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isEmbed && /*#__PURE__*/_jsxDEV(PlansHeader, {\n        primaryAction: /*#__PURE__*/_jsxDEV(AddUserButton, {\n          openManagePlansModal: openManagePlansModal,\n          isOpenManagePlansModal: isOpenManagePlansModal,\n          setContainerMode: setContainerMode,\n          containerMode: containerMode,\n          openManagePlanLinkModal: openManagePlanLinkModal,\n          t: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ActionBar, {\n        setContainerMode: setContainerMode,\n        containerMode: containerMode,\n        ...commonProps,\n        isEmbed: isEmbed,\n        options: {\n          actions: (plans === null || plans === void 0 ? void 0 : plans.length) > 0 && ActionsUsers\n        },\n        handleNewLinkModal: handleNewLinkModal,\n        extraButtons: \"true\",\n        conditionalButton: (packData === null || packData === void 0 ? void 0 : packData.type) || \"ALL\",\n        children: /*#__PURE__*/_jsxDEV(SearchPlansForm, { ...commonProps,\n          refetch: refetch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), containerMode === \"table\" && /*#__PURE__*/_jsxDEV(PlansTable, { ...commonProps,\n        plans: plans,\n        pagination: pagination,\n        setPagination: setPagination,\n        loading: loading,\n        refetch: refetch,\n        initialValues: initialValues,\n        setPage: setPage,\n        setSelectedPlan: setSelectedPlan,\n        selectedPlan: selectedPlan,\n        handleDetails: handleDetails,\n        handleEdit: handleEdit,\n        details: handleDetails,\n        handleArchived: handleArchived,\n        handleActive: handleActive,\n        handleAddImage: handleAddImage,\n        packData: packData,\n        t: t\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), containerMode === \"cards\" && /*#__PURE__*/_jsxDEV(PlansCard, { ...commonProps,\n        plans: plans,\n        pagination: pagination,\n        setPagination: setPagination,\n        loading: loading,\n        refetch: refetch // initialValues={initialValues}\n        ,\n        setPage: setPage,\n        setSelectedPack: setSelectedPlan,\n        selectedBucket: selectedPlan,\n        handleDetails: handleDetails,\n        handleEdit: handleEdit,\n        details: handleDetails,\n        handleArchived: handleArchived,\n        packData: packData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), page === globals.PAGE_ONE && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlanHeader, {\n        setPage: setPage,\n        selectedPlan: selectedPlan,\n        handleDetails: handleDetails,\n        handleEdit: handleEdit,\n        setSubpage: setSubpage,\n        handleArchived: handleArchived,\n        handleEditContent: handleEditContent,\n        handleAddImage: handleAddImage,\n        t: t\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), subpage === numbers.ONE && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subcontainer-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(TransContainer, {\n          isEmbed: \"true\",\n          planId: planId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this), subpage === numbers.TWO && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subcontainer-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(AppsContainer, {\n          isEmbed: \"true\",\n          planId: selectedPlan._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this), subpage === numbers.THREE && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subcontainer-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(BucketContainer, {\n          isEmbed: \"true\",\n          planId: planId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ManagePlanModal2, {\n      refetch: refetch,\n      planId: planId,\n      setPlanId: setPlanId,\n      closeModal: closeManagePlansModal,\n      openModal: isOpenManagePlansModal,\n      t: t\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ManagePlanLinkModal, {\n      refetch: refetch,\n      planId: planId,\n      packId: packId,\n      setPlanId: setPlanId,\n      closeModal: closeManagePlanLinkModal,\n      openModal: isOpenManagePlanLinkModal,\n      typePlan: type,\n      packData: packData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ManagePlanContentModal, {\n      t: t,\n      refetch: refetch,\n      planId: planId,\n      setPlanId: setPlanId,\n      closeModal: closeManagePlanContentModal,\n      openModal: isOpenManagePlanContentModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ManageBucketModal, {\n      entityProp: \"Pack\",\n      typeProp: \"Avatar\",\n      entityId: packId,\n      openModal: isOpenManageBucketModal,\n      closeModal: closeManageBucketModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrawerPlan, {\n      isOpenDrawPlan: isOpenDrawPlan,\n      closeDrawPlan: closeDrawPlan,\n      selectedPlan: selectedPlan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Plans, \"o+gsjjpOunM0tIAO7zQUjUNETaE=\", false, function () {\n  return [useTranslation, useDispatch, useSelector, useSelector, usePlans, useModal, useModal, useModal, useModal, useModal];\n});\n\n_c = Plans;\nexport default Plans;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plans\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/plans/containers/Plans.js"],"names":["useState","useEffect","useTranslation","Drawer","Button","confirmAlert","useSelector","useDispatch","ActionBar","PlansTable","SearchPlansForm","ActionsUsers","ManagePlanModal2","ManagePlanLinkModal","AddUserButton","PlanHeader","PlansHeader","ManagePlanContentModal","PlansCard","DrawerPlan","ManageBucketModal","showGlobalNotification","setPlan","setPlanRedux","getPlan","archivedPlan","activePlan","usePlans","useModal","TransContainer","AppsContainer","BucketContainer","globals","numbers","Plans","isEmbed","appId","packId","userId","packData","t","dispatch","packStoreRedux","store","pack","sessionStoreRedux","session","plans","filters","setFilters","pagination","setPagination","loading","refetch","commonProps","page","setPage","PAGE_MAIN","subpage","setSubpage","ONE","selectedPlan","setSelectedPlan","containerMode","setContainerMode","type","setType","planId","setPlanId","isOpenManagePlansModal","openManagePlansModal","closeManagePlansModal","isOpenDrawPlan","openDrawPlan","closeDrawPlan","isOpenManagePlanLinkModal","openManagePlanLinkModal","closeManagePlanLinkModal","isOpenManagePlanContentModal","openManagePlanContentModal","closeManagePlanContentModal","isOpenManageBucketModal","openManageBucketModal","closeManageBucketModal","initialValues","setInitialValues","name","duration","category","maxLimit","minLimit","observation","active","tag","price","avatar","public","startdate","closuredate","handleEdit","plan","_id","console","log","handleNewLinkModal","type1","window","open","CLUUF","currentSession","instanceId","openDraw","onSuccess","response","result","onError","handleDetails","PAGE_ONE","handleArchivedConfirm","onFinally","handleArchived","title","message","buttons","label","onClick","handleActiveConfirm","handleActive","handleEditContent","handleAddImage","actions","length","TWO","THREE"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Drawer, Button } from \"antd\";\n\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// COMPONENTS\nimport ActionBar from \"../../shared/components/ActionBar\";\nimport PlansTable from \"../components/PlansTable\";\nimport SearchPlansForm from \"../components/SearchPlansForm\";\nimport ActionsUsers from \"../components/ActionsPlans\";\nimport ManagePlanModal2 from \"../components/ManagePlanModal2\";\nimport ManagePlanLinkModal from \"../components/ManagePlanLinkModal\";\nimport AddUserButton from \"../components/AddPlanButton\";\nimport PlanHeader from \"../components/PlanHeader\";\nimport PlansHeader from \"../components/PlansHeader\";\nimport ManagePlanContentModal from \"../components/ManagePlanContentModal\";\nimport PlansCard from \"../components/PlansCard\";\nimport DrawerPlan from \"../components/DrawerPlan\";\n\nimport ManageBucketModal from \"../../bucket/components/ManageBucketModal\";\n\n// HELPERS\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\n\n// REDUX\nimport { setPlan, setPlanRedux } from \"../../../redux/plan\";\n\n// REQUEST\nimport { getPlan, archivedPlan, activePlan } from \"../requests\";\n\n// HOOKS\nimport usePlans from \"../hooks/usePlans\";\nimport useModal from \"../../shared/hooks/useModal\";\n\n// CONTAINERS\nimport TransContainer from \"../../trans/containers/Trans\";\nimport AppsContainer from \"../../apps/containers/Apps\";\nimport BucketContainer from \"../../bucket/containers/Buckets\";\n\n// CONSTANTS\nimport { globals, numbers } from \"../../../constants/globals\";\n\nconst Plans = ({ isEmbed = false, appId = null, packId = null, userId = null, packData = {} }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const packStoreRedux = useSelector((store) => store.pack);\n  const sessionStoreRedux = useSelector((store) => store.session);\n\n  const { plans, filters, setFilters, pagination, setPagination, loading, refetch } = usePlans(appId, packId, userId);\n\n  const commonProps = { filters, setFilters };\n  const [page, setPage] = useState(globals.PAGE_MAIN);\n  const [subpage, setSubpage] = useState(numbers.ONE);\n  const [selectedPlan, setSelectedPlan] = useState({});\n  const [containerMode, setContainerMode] = useState(\"table\");\n  const [type, setType] = useState(\"TEXT\");\n\n  const [planId, setPlanId] = useState(null);\n  const [isOpenManagePlansModal, openManagePlansModal, closeManagePlansModal] = useModal();\n  const [isOpenDrawPlan, openDrawPlan, closeDrawPlan] = useModal();\n\n  const [isOpenManagePlanLinkModal, openManagePlanLinkModal, closeManagePlanLinkModal] = useModal();\n  const [isOpenManagePlanContentModal, openManagePlanContentModal, closeManagePlanContentModal] = useModal();\n  const [isOpenManageBucketModal, openManageBucketModal, closeManageBucketModal] = useModal();\n\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    duration: \"\",\n    category: \"\",\n    maxLimit: 1,\n    minLimit: 1,\n    observation: \"\",\n    active: true,\n    tag: \"\",\n    price: \"\",\n    avatar: \"\",\n    public: false,\n    startdate: \"2020/01/01\",\n    closuredate: \"2020/01/01\",\n  });\n\n  useEffect(() => {\n    setPlan(selectedPlan)(dispatch);\n  }, [selectedPlan]);\n\n  const handleEdit = (plan) => {\n    setSelectedPlan(plan);\n    setPlanId(plan._id);\n    setType(plan.type);\n    console.log(plan.type);\n    // openManagePlansModal();\n    openManagePlanLinkModal();\n  };\n\n  const handleNewLinkModal = (type1) => {\n    setType(type1);\n    if (type1 === \"URL_IMAGE\") {\n      // id # entity # type\n      window.open(\n        `https://lospatioshb.com/file/?code=${packId}${globals.CLUUF}Pack${globals.CLUUF}Avatar${globals.CLUUF}${sessionStoreRedux.currentSession.instanceId}`\n      );\n    } else if (type1 === \"IMAGE\") {\n      openManageBucketModal();\n    } else {\n      openManagePlanLinkModal();\n    }\n  };\n\n  const openDraw = (plan) => {\n    setPlanId(plan?._id);\n    getPlan(plan?._id, {\n      onSuccess: (response) => {\n        setSelectedPlan(response.result);\n        setPlanRedux(response.result);\n        openDrawPlan();\n      },\n      onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n    });\n  };\n\n  const handleDetails = (plan) => {\n    console.log(plan._id);\n    if (isEmbed) {\n      openDraw(plan);\n    } else {\n      setPage(globals.PAGE_ONE);\n      setSubpage(numbers.ONE);\n      setPlanId(plan._id);\n      getPlan(plan._id, {\n        onSuccess: (response) => {\n          setSelectedPlan(response.result);\n          setPlanRedux(response.result);\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      });\n    }\n  };\n\n  const handleArchivedConfirm = (plan) => {\n    archivedPlan(\n      {\n        plan,\n      },\n      {\n        onSuccess: (response) => {\n          refetch();\n          showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n        onFinally: () => {},\n      }\n    );\n  };\n\n  const handleArchived = (plan) => {\n    setPlanId(plan._id);\n    confirmAlert({\n      title: `Eliminar ${plan.name}`,\n      message: `Esta seguro que desea eliminar el setting de ${plan.name}?`,\n      buttons: [\n        {\n          label: t(\"yes\"),\n          onClick: () => handleArchivedConfirm(plan),\n        },\n        {\n          label: t(\"no\"),\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const handleActiveConfirm = (plan) => {\n    activePlan(\n      {\n        plan,\n      },\n      {\n        onSuccess: (response) => {\n          refetch();\n          showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n        onFinally: () => {},\n      }\n    );\n  };\n\n  const handleActive = (plan) => {\n    setPlanId(plan._id);\n    confirmAlert({\n      title: plan.active ? \"Desactivar el Paquete\" : \"Activar el Paquete\",\n      message: \"Esta seguro que desea continuar?\",\n      buttons: [\n        {\n          label: t(\"yes\"),\n          onClick: () => handleActiveConfirm(plan),\n        },\n        {\n          label: t(\"no\"),\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  const handleEditContent = (plan) => {\n    setSelectedPlan(plan);\n    setPlanId(plan._id);\n    openManagePlanContentModal();\n  };\n\n  const handleAddImage = (plan) => {\n    setSelectedPlan(plan);\n    setPlanId(plan._id);\n    openManageBucketModal();\n  };\n\n  return (\n    <>\n      {page === globals.PAGE_MAIN && (\n        <div>\n          {!isEmbed && (\n            <PlansHeader\n              primaryAction={\n                <AddUserButton\n                  openManagePlansModal={openManagePlansModal}\n                  isOpenManagePlansModal={isOpenManagePlansModal}\n                  setContainerMode={setContainerMode}\n                  containerMode={containerMode}\n                  openManagePlanLinkModal={openManagePlanLinkModal}\n                  t={t}\n                />\n              }\n            />\n          )}\n          <ActionBar\n            setContainerMode={setContainerMode}\n            containerMode={containerMode}\n            {...commonProps}\n            isEmbed={isEmbed}\n            options={{ actions: plans?.length > 0 && ActionsUsers }}\n            handleNewLinkModal={handleNewLinkModal}\n            extraButtons=\"true\"\n            conditionalButton={packData?.type || \"ALL\"}\n          >\n            <SearchPlansForm {...commonProps} refetch={refetch} />\n          </ActionBar>\n          {containerMode === \"table\" && (\n            <PlansTable\n              {...commonProps}\n              plans={plans}\n              pagination={pagination}\n              setPagination={setPagination}\n              loading={loading}\n              refetch={refetch}\n              initialValues={initialValues}\n              setPage={setPage}\n              setSelectedPlan={setSelectedPlan}\n              selectedPlan={selectedPlan}\n              handleDetails={handleDetails}\n              handleEdit={handleEdit}\n              details={handleDetails}\n              handleArchived={handleArchived}\n              handleActive={handleActive}\n              handleAddImage={handleAddImage}\n              packData={packData}\n              t={t}\n            />\n          )}\n          {containerMode === \"cards\" && (\n            <PlansCard\n              {...commonProps}\n              plans={plans}\n              pagination={pagination}\n              setPagination={setPagination}\n              loading={loading}\n              refetch={refetch}\n              // initialValues={initialValues}\n              setPage={setPage}\n              setSelectedPack={setSelectedPlan}\n              selectedBucket={selectedPlan}\n              handleDetails={handleDetails}\n              handleEdit={handleEdit}\n              details={handleDetails}\n              handleArchived={handleArchived}\n              packData={packData}\n            />\n          )}\n        </div>\n      )}\n      {page === globals.PAGE_ONE && (\n        <div>\n          <PlanHeader\n            setPage={setPage}\n            selectedPlan={selectedPlan}\n            handleDetails={handleDetails}\n            handleEdit={handleEdit}\n            setSubpage={setSubpage}\n            handleArchived={handleArchived}\n            handleEditContent={handleEditContent}\n            handleAddImage={handleAddImage}\n            t={t}\n          />\n          {subpage === numbers.ONE && (\n            <div className=\"subcontainer-wrapper\">\n              <TransContainer isEmbed=\"true\" planId={planId} />\n            </div>\n          )}\n          {subpage === numbers.TWO && (\n            <div className=\"subcontainer-wrapper\">\n              <AppsContainer isEmbed=\"true\" planId={selectedPlan._id} />\n            </div>\n          )}\n          {subpage === numbers.THREE && (\n            <div className=\"subcontainer-wrapper\">\n              <BucketContainer isEmbed=\"true\" planId={planId} />\n            </div>\n          )}\n        </div>\n      )}\n      <ManagePlanModal2\n        refetch={refetch}\n        planId={planId}\n        setPlanId={setPlanId}\n        closeModal={closeManagePlansModal}\n        openModal={isOpenManagePlansModal}\n        t={t}\n      />\n      <ManagePlanLinkModal\n        refetch={refetch}\n        planId={planId}\n        packId={packId}\n        setPlanId={setPlanId}\n        closeModal={closeManagePlanLinkModal}\n        openModal={isOpenManagePlanLinkModal}\n        typePlan={type}\n        packData={packData}\n      />\n      <ManagePlanContentModal\n        t={t}\n        refetch={refetch}\n        planId={planId}\n        setPlanId={setPlanId}\n        closeModal={closeManagePlanContentModal}\n        openModal={isOpenManagePlanContentModal}\n      />\n      <ManageBucketModal\n        entityProp=\"Pack\"\n        typeProp=\"Avatar\"\n        entityId={packId}\n        openModal={isOpenManageBucketModal}\n        closeModal={closeManageBucketModal}\n      />\n      <DrawerPlan isOpenDrawPlan={isOpenDrawPlan} closeDrawPlan={closeDrawPlan} selectedPlan={selectedPlan} />\n    </>\n  );\n};\n\nexport default Plans;\n"]},"metadata":{},"sourceType":"module"}