{"ast":null,"code":"var _jsxFileName = \"/Users/kometsales/Documents/heyo-slack/src/features/plans/components/ManagePlanLinkModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport ReactQuill from \"react-quill\";\nimport debounce from \"lodash/debounce\";\nimport { Form, Row, Col, Input, Select, Spin, DatePicker, Switch, Tabs, message, Divider } from \"antd\";\nimport { constantsPlan } from \"../constants\";\nimport { savePlan, getPlan } from \"../requests\";\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport BaseModal from \"../../shared/components/Modal/BaseModal\";\nimport SelectPacks from \"../../packs/components/SelectPacks\";\nimport { setPlanRedux } from \"../../../redux/plan\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst moment = require(\"moment\");\n\nconst {\n  TabPane\n} = Tabs;\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\nconst defaultValues = {\n  name: \"\",\n  departurePlace: \"\",\n  category: \"\",\n  active: true,\n  public: true,\n  body: \"\",\n  bodyResponsive: \"\",\n  price: 0,\n  packId: null,\n  startdate: moment(moment().format(\"YYYY-MM-DD\"), \"YYYY/MM/DD HH:mm\"),\n  closuredate: moment(moment().format(\"YYYY-MM-DD\"), \"YYYY/MM/DD HH:mm\")\n};\n\nconst ManagePlanLinkModal = ({\n  planId,\n  openModal,\n  closeModal,\n  refetch,\n  setPlanId,\n  packData = {},\n  typePlan = constantsPlan.CONTENT_TYPE.TEXT\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionStoreRedux = useSelector(store => store.session);\n  const {\n    t\n  } = useTranslation();\n  const [selectedPlan, setSelectedPlan] = useState(defaultValues);\n  const [form] = Form.useForm();\n  const [loaderForm, setLoaderForm] = useState(false);\n  const [mode, setMode] = useState(null);\n  const [reload, setReload] = useState(0);\n\n  const handleReset = () => {\n    setSelectedPlan(defaultValues);\n    setReload(Math.floor(Math.random() * 100000));\n  };\n\n  useEffect(() => {\n    if (openModal) {\n      if (planId) {\n        setMode(\"edit\");\n      } else {\n        setMode(\"new\");\n      }\n    } else {\n      handleReset();\n      setMode(null);\n      setPlanId(null);\n    }\n  }, [openModal]);\n  useEffect(() => {\n    if (mode === \"new\") {\n      handleReset();\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (mode === \"edit\") {\n      setLoaderForm(true);\n      getPlan(planId, {\n        onSuccess: response => {\n          setPlanRedux(response.result)(dispatch);\n          setSelectedPlan({ ...response.result,\n            startdate: moment(response.result.startdate, \"YYYY/MM/DD HH:mm\") || moment(\"2020/12/12\", \"YYYY/MM/DD\"),\n            closuredate: moment(response.result.closuredate, \"YYYY/MM/DD HH:mm\") || moment(\"2020/12/12\", \"YYYY/MM/DD\")\n          });\n          setLoaderForm(false);\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\"))\n      });\n    }\n  }, [mode]);\n  useEffect(() => {\n    form.setFieldsValue(selectedPlan);\n  }, [form, selectedPlan]);\n\n  const handleCloseModal = () => {\n    refetch();\n    closeModal();\n  };\n\n  const onFinish = values => {\n    if (packData === null || packData === void 0 ? void 0 : packData._id) {\n      setSelectedPlan({ ...selectedPlan,\n        packId: packData._id\n      });\n    }\n\n    const data = { ...selectedPlan,\n      ...values,\n      packId: (packData === null || packData === void 0 ? void 0 : packData._id) && packData._id\n    };\n\n    if (!data.packId) {\n      message.error(\"This is an error message\");\n    } else {\n      savePlan({ ...data,\n        planId,\n        multiple: packData.multiple,\n        type: typePlan,\n        rootId: sessionStoreRedux.currentSession_id\n      }, {\n        onSuccess: response => {\n          setPlanRedux(response.result)(dispatch);\n          showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n        onFinally: () => handleCloseModal()\n      });\n    }\n  };\n\n  const onValuesChange = debounce(values => {\n    setSelectedPlan({ ...selectedPlan,\n      ...values\n    });\n  }, 500);\n\n  const handleSubmit = () => {\n    form.validateFields().then(() => {\n      form.submit();\n    });\n  };\n\n  const handleActive = checked => {\n    setSelectedPlan({ ...selectedPlan,\n      active: checked\n    });\n  };\n\n  const handlePublic = checked => {\n    setSelectedPlan({ ...selectedPlan,\n      public: checked\n    });\n  };\n\n  const handlePack = value => {\n    setSelectedPlan({ ...selectedPlan,\n      packId: value\n    });\n  };\n\n  const config = {\n    rules: [{\n      type: \"object\",\n      required: true,\n      message: \"Please select time!\"\n    }]\n  };\n\n  const callback = key => console.log(key);\n\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    isOpenModal: openModal,\n    closeModal: handleCloseModal,\n    onCancel: handleCloseModal,\n    onConfirm: () => handleSubmit(),\n    title: planId ? `${t(\"new\")} ${t(\"link\")}` : `${t(\"edit\")} ${t(\"link\")}`,\n    width: 1100,\n    confirmText: \"Guardar\",\n    isCloseModal: true,\n    top: 70,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      name: \"manage-category-form-modal\",\n      initialValues: defaultValues,\n      className: \"manage-modal\",\n      onFinish: onFinish,\n      labelCol: {\n        span: 24\n      },\n      onValuesChange: onValuesChange,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layout-form-modal entity-500 entity-small\",\n        children: loaderForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Spin, {\n            tip: t(\"loading\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            gutter: 15,\n            style: {\n              paddingBottom: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: [!packData._id && /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"packId2\",\n                tooltip: \"Firstname here pleaseio\",\n                label: t(\"pack\"),\n                children: /*#__PURE__*/_jsxDEV(SelectPacks, {\n                  reload: reload,\n                  currentValue: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.packId,\n                  defaultValue: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.packId,\n                  returnData: handlePack,\n                  staticComponent: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), packData._id && /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: packData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"1\",\n            onChange: callback,\n            children: [/*#__PURE__*/_jsxDEV(TabPane, {\n              tab: \"General\",\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                gutter: 15,\n                className: \"checked-box \",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 7,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"category\",\n                    label: t(\"category\"),\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      className: \"select-form-modal\",\n                      children: [/*#__PURE__*/_jsxDEV(Option, {\n                        value: \"PASSPORT\",\n                        children: \"PASSPORT\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Option, {\n                        value: \"DNI\",\n                        children: \"DNI\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Option, {\n                        value: \"CEDULA_EXTRANJERIA\",\n                        children: \"CEDULA_EXTRANJERIA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Option, {\n                        value: \"OTRO\",\n                        children: \"OTRO\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"active\",\n                    labelAlign: \"right\",\n                    label: t(\"active\"),\n                    children: /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: !!(selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.active),\n                      onChange: handleActive\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 6,\n                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                    name: \"public\",\n                    labelAlign: \"right\",\n                    label: t(\"public\"),\n                    children: /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: !!(selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.public),\n                      onChange: handlePublic\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), typePlan === constantsPlan.CONTENT_TYPE.LINK && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Divider, {\n                  orientation: \"left\",\n                  plain: true,\n                  children: t(\"link\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: 15,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"name\",\n                      tooltip: \"Texto del Enlace\",\n                      label: t(\"Text\"),\n                      rules: [{\n                        required: true,\n                        message: `Por favor ingrese el texto del Enlace`\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"\",\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"url\",\n                      tooltip: \"Url del Enlace\",\n                      label: t(\"url\"),\n                      rules: [{\n                        required: true,\n                        message: `Por favor ingrese la url del Enlace`\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"http://\",\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.url\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), typePlan === constantsPlan.CONTENT_TYPE.HTML && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: 16,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"body\",\n                      label: t(\"body\"),\n                      className: \"ql-editor-wrapper-100\",\n                      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n                        id: \"receipt\",\n                        theme: \"snow\",\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.body\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"bodyResponsive\",\n                      label: t(\"bodyResponsive\"),\n                      className: \"ql-editor-wrapper-100\",\n                      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n                        id: \"receipt\",\n                        theme: \"snow\",\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.bodyResponsive\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this), typePlan === constantsPlan.CONTENT_TYPE.TEXT && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: 16,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"body\",\n                      label: t(\"body\"),\n                      children: /*#__PURE__*/_jsxDEV(TextArea, {\n                        showCount: true,\n                        maxLength: 100,\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.body\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"bodyResponsive\",\n                      label: t(\"bodyResponsive\"),\n                      children: /*#__PURE__*/_jsxDEV(TextArea, {\n                        showCount: true,\n                        maxLength: 100,\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.bodyResponsive\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), typePlan === constantsPlan.CONTENT_TYPE.IMAGE && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: 15,\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"name\",\n                      tooltip: \"Texto referencia de la imagen\",\n                      label: t(\"Text\"),\n                      rules: [{\n                        required: true,\n                        message: `Por favor ingrese el texto para la imagen`\n                      }],\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        placeholder: \"\",\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)]\n            }, \"1\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n              tab: \"Avanzado\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  gutter: 15,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    span: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"departurePlace\",\n                      label: t(\"location\"),\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.departurePlace\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 350,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"startdate\",\n                      label: t(\"startdate\"),\n                      ...config,\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        format: \"YYYY/MM/DD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"closuredate\",\n                      label: t(\"enddate\"),\n                      ...config,\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        format: \"YYYY/MM/DD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 361,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 4,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"tag\",\n                      label: t(\"tags\"),\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.tag\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: 16,\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    span: 24,\n                    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                      name: \"observation\",\n                      label: t(\"description\"),\n                      children: /*#__PURE__*/_jsxDEV(TextArea, {\n                        showCount: \"true\",\n                        onResize: \"false\",\n                        value: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.observation\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)\n            }, \"2\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManagePlanLinkModal, \"oEjhIrUU+d+l81tz0K6U0OZHE/Y=\", false, function () {\n  return [useDispatch, useSelector, useTranslation, Form.useForm];\n});\n\n_c = ManagePlanLinkModal;\nManagePlanLinkModal.defaultProps = {\n  setPlanId: () => {}\n};\nexport default ManagePlanLinkModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagePlanLinkModal\");","map":{"version":3,"sources":["/Users/kometsales/Documents/heyo-slack/src/features/plans/components/ManagePlanLinkModal.js"],"names":["useState","useEffect","useSelector","useDispatch","useTranslation","ReactQuill","debounce","Form","Row","Col","Input","Select","Spin","DatePicker","Switch","Tabs","message","Divider","constantsPlan","savePlan","getPlan","showGlobalNotification","BaseModal","SelectPacks","setPlanRedux","moment","require","TabPane","TextArea","Option","defaultValues","name","departurePlace","category","active","public","body","bodyResponsive","price","packId","startdate","format","closuredate","ManagePlanLinkModal","planId","openModal","closeModal","refetch","setPlanId","packData","typePlan","CONTENT_TYPE","TEXT","dispatch","sessionStoreRedux","store","session","t","selectedPlan","setSelectedPlan","form","useForm","loaderForm","setLoaderForm","mode","setMode","reload","setReload","handleReset","Math","floor","random","onSuccess","response","result","onError","setFieldsValue","handleCloseModal","onFinish","values","_id","data","error","multiple","type","rootId","currentSession_id","onFinally","onValuesChange","handleSubmit","validateFields","then","submit","handleActive","checked","handlePublic","handlePack","value","config","rules","required","callback","key","console","log","span","paddingBottom","LINK","url","HTML","IMAGE","marginTop","tag","observation","defaultProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport ReactQuill from \"react-quill\";\n\nimport debounce from \"lodash/debounce\";\n\nimport { Form, Row, Col, Input, Select, Spin, DatePicker, Switch, Tabs, message, Divider } from \"antd\";\nimport { constantsPlan } from \"../constants\";\n\nimport { savePlan, getPlan } from \"../requests\";\nimport showGlobalNotification from \"../../../helpers/showGlobalNotification\";\nimport BaseModal from \"../../shared/components/Modal/BaseModal\";\nimport SelectPacks from \"../../packs/components/SelectPacks\";\nimport { setPlanRedux } from \"../../../redux/plan\";\n\nimport \"react-quill/dist/quill.snow.css\"; // ES6\n\nconst moment = require(\"moment\");\n\nconst { TabPane } = Tabs;\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst defaultValues = {\n  name: \"\",\n  departurePlace: \"\",\n  category: \"\",\n  active: true,\n  public: true,\n  body: \"\",\n  bodyResponsive: \"\",\n  price: 0,\n  packId: null,\n  startdate: moment(moment().format(\"YYYY-MM-DD\"), \"YYYY/MM/DD HH:mm\"),\n  closuredate: moment(moment().format(\"YYYY-MM-DD\"), \"YYYY/MM/DD HH:mm\"),\n};\n\nconst ManagePlanLinkModal = ({\n  planId,\n  openModal,\n  closeModal,\n  refetch,\n  setPlanId,\n  packData = {},\n  typePlan = constantsPlan.CONTENT_TYPE.TEXT,\n}) => {\n  const dispatch = useDispatch();\n  const sessionStoreRedux = useSelector((store) => store.session);\n  const { t } = useTranslation();\n\n  const [selectedPlan, setSelectedPlan] = useState(defaultValues);\n  const [form] = Form.useForm();\n  const [loaderForm, setLoaderForm] = useState(false);\n  const [mode, setMode] = useState(null);\n  const [reload, setReload] = useState(0);\n\n  const handleReset = () => {\n    setSelectedPlan(defaultValues);\n    setReload(Math.floor(Math.random() * 100000));\n  };\n\n  useEffect(() => {\n    if (openModal) {\n      if (planId) {\n        setMode(\"edit\");\n      } else {\n        setMode(\"new\");\n      }\n    } else {\n      handleReset();\n      setMode(null);\n      setPlanId(null);\n    }\n  }, [openModal]);\n\n  useEffect(() => {\n    if (mode === \"new\") {\n      handleReset();\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    if (mode === \"edit\") {\n      setLoaderForm(true);\n      getPlan(planId, {\n        onSuccess: (response) => {\n          setPlanRedux(response.result)(dispatch);\n          setSelectedPlan({\n            ...response.result,\n            startdate: moment(response.result.startdate, \"YYYY/MM/DD HH:mm\") || moment(\"2020/12/12\", \"YYYY/MM/DD\"),\n            closuredate: moment(response.result.closuredate, \"YYYY/MM/DD HH:mm\") || moment(\"2020/12/12\", \"YYYY/MM/DD\"),\n          });\n          setLoaderForm(false);\n        },\n        onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n      });\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    form.setFieldsValue(selectedPlan);\n  }, [form, selectedPlan]);\n\n  const handleCloseModal = () => {\n    refetch();\n    closeModal();\n  };\n\n  const onFinish = (values) => {\n    if (packData?._id) {\n      setSelectedPlan({ ...selectedPlan, packId: packData._id });\n    }\n\n    const data = { ...selectedPlan, ...values, packId: packData?._id && packData._id };\n\n    if (!data.packId) {\n      message.error(\"This is an error message\");\n    } else {\n      savePlan(\n        {\n          ...data,\n          planId,\n          multiple: packData.multiple,\n          type: typePlan,\n          rootId: sessionStoreRedux.currentSession_id,\n        },\n        {\n          onSuccess: (response) => {\n            setPlanRedux(response.result)(dispatch);\n            showGlobalNotification(\"success\", t(\"inHorabuena\"), t(\"successfulProcess\"));\n          },\n          onError: () => showGlobalNotification(\"error\", t(\"errorTitle\"), t(\"errorDescription\")),\n          onFinally: () => handleCloseModal(),\n        }\n      );\n    }\n  };\n\n  const onValuesChange = debounce((values) => {\n    setSelectedPlan({ ...selectedPlan, ...values });\n  }, 500);\n\n  const handleSubmit = () => {\n    form.validateFields().then(() => {\n      form.submit();\n    });\n  };\n\n  const handleActive = (checked) => {\n    setSelectedPlan({ ...selectedPlan, active: checked });\n  };\n\n  const handlePublic = (checked) => {\n    setSelectedPlan({ ...selectedPlan, public: checked });\n  };\n\n  const handlePack = (value) => {\n    setSelectedPlan({ ...selectedPlan, packId: value });\n  };\n\n  const config = {\n    rules: [\n      {\n        type: \"object\",\n        required: true,\n        message: \"Please select time!\",\n      },\n    ],\n  };\n\n  const callback = (key) => console.log(key);\n\n  return (\n    <BaseModal\n      isOpenModal={openModal}\n      closeModal={handleCloseModal}\n      onCancel={handleCloseModal}\n      onConfirm={() => handleSubmit()}\n      title={planId ? `${t(\"new\")} ${t(\"link\")}` : `${t(\"edit\")} ${t(\"link\")}`}\n      width={1100}\n      confirmText=\"Guardar\"\n      isCloseModal\n      top={70}\n    >\n      <Form\n        form={form}\n        name=\"manage-category-form-modal\"\n        initialValues={defaultValues}\n        className=\"manage-modal\"\n        onFinish={onFinish}\n        labelCol={{ span: 24 }}\n        onValuesChange={onValuesChange}\n      >\n        <div className=\"layout-form-modal entity-500 entity-small\">\n          {loaderForm ? (\n            <>\n              <Spin tip={t(\"loading\")} />\n            </>\n          ) : (\n            <>\n              <Row gutter={15} style={{ paddingBottom: 10 }}>\n                <Col span={24}>\n                  {!packData._id && (\n                    <Form.Item name=\"packId2\" tooltip=\"Firstname here pleaseio\" label={t(\"pack\")}>\n                      <SelectPacks\n                        reload={reload}\n                        currentValue={selectedPlan?.packId}\n                        defaultValue={selectedPlan?.packId}\n                        returnData={handlePack}\n                        staticComponent\n                      />\n                    </Form.Item>\n                  )}\n                  {packData._id && <h2>{packData.name}</h2>}\n                </Col>\n              </Row>\n\n              <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"General\" key=\"1\">\n                  <Row gutter={15} className=\"checked-box \">\n                    <Col span={7}>\n                      <Form.Item name=\"category\" label={t(\"category\")}>\n                        <Select className=\"select-form-modal\">\n                          <Option value=\"PASSPORT\">PASSPORT</Option>\n                          <Option value=\"DNI\">DNI</Option>\n                          <Option value=\"CEDULA_EXTRANJERIA\">CEDULA_EXTRANJERIA</Option>\n                          <Option value=\"OTRO\">OTRO</Option>\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                      <Form.Item name=\"active\" labelAlign=\"right\" label={t(\"active\")}>\n                        <Switch checked={!!selectedPlan?.active} onChange={handleActive} />\n                      </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                      <Form.Item name=\"public\" labelAlign=\"right\" label={t(\"public\")}>\n                        <Switch checked={!!selectedPlan?.public} onChange={handlePublic} />\n                      </Form.Item>\n                    </Col>\n                  </Row>\n\n                  {typePlan === constantsPlan.CONTENT_TYPE.LINK && (\n                    <div>\n                      <Divider orientation=\"left\" plain>\n                        {t(\"link\")}\n                      </Divider>\n                      <Row gutter={15}>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"name\"\n                            tooltip=\"Texto del Enlace\"\n                            label={t(\"Text\")}\n                            rules={[\n                              {\n                                required: true,\n                                message: `Por favor ingrese el texto del Enlace`,\n                              },\n                            ]}\n                          >\n                            <Input placeholder=\"\" value={selectedPlan?.name} />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"url\"\n                            tooltip=\"Url del Enlace\"\n                            label={t(\"url\")}\n                            rules={[\n                              {\n                                required: true,\n                                message: `Por favor ingrese la url del Enlace`,\n                              },\n                            ]}\n                          >\n                            <Input placeholder=\"http://\" value={selectedPlan?.url} />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </div>\n                  )}\n\n                  {typePlan === constantsPlan.CONTENT_TYPE.HTML && (\n                    <div>\n                      <Row gutter={16}>\n                        <Col span={24}>\n                          <Form.Item name=\"body\" label={t(\"body\")} className=\"ql-editor-wrapper-100\">\n                            <ReactQuill id=\"receipt\" theme=\"snow\" value={selectedPlan?.body} />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"bodyResponsive\"\n                            label={t(\"bodyResponsive\")}\n                            className=\"ql-editor-wrapper-100\"\n                          >\n                            <ReactQuill id=\"receipt\" theme=\"snow\" value={selectedPlan?.bodyResponsive} />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </div>\n                  )}\n\n                  {typePlan === constantsPlan.CONTENT_TYPE.TEXT && (\n                    <div>\n                      <Row gutter={16}>\n                        <Col span={24}>\n                          <Form.Item name=\"body\" label={t(\"body\")}>\n                            <TextArea showCount maxLength={100} value={selectedPlan?.body} />\n                          </Form.Item>\n                        </Col>\n                        <Col span={24}>\n                          <Form.Item name=\"bodyResponsive\" label={t(\"bodyResponsive\")}>\n                            <TextArea showCount maxLength={100} value={selectedPlan?.bodyResponsive} />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </div>\n                  )}\n\n                  {typePlan === constantsPlan.CONTENT_TYPE.IMAGE && (\n                    <div>\n                      <Row gutter={15}>\n                        <Col span={24}>\n                          <Form.Item\n                            name=\"name\"\n                            tooltip=\"Texto referencia de la imagen\"\n                            label={t(\"Text\")}\n                            rules={[\n                              {\n                                required: true,\n                                message: `Por favor ingrese el texto para la imagen`,\n                              },\n                            ]}\n                          >\n                            <Input placeholder=\"\" value={selectedPlan?.name} />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </div>\n                  )}\n                </TabPane>\n                <TabPane tab=\"Avanzado\" key=\"2\">\n                  <div style={{ marginTop: 20 }}>\n                    <Row gutter={15}>\n                      <Col span={4}>\n                        <Form.Item name=\"departurePlace\" label={t(\"location\")}>\n                          <Input value={selectedPlan?.departurePlace} />\n                        </Form.Item>\n                      </Col>\n                      <Col span={4}>\n                        <Form.Item name=\"startdate\" label={t(\"startdate\")} {...config}>\n                          <DatePicker format=\"YYYY/MM/DD\" />\n                        </Form.Item>\n                      </Col>\n\n                      <Col span={4}>\n                        <Form.Item name=\"closuredate\" label={t(\"enddate\")} {...config}>\n                          <DatePicker format=\"YYYY/MM/DD\" />\n                        </Form.Item>\n                      </Col>\n                      <Col span={4}>\n                        <Form.Item name=\"tag\" label={t(\"tags\")}>\n                          <Input value={selectedPlan?.tag} />\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                    <Row gutter={16}>\n                      <Col span={24}>\n                        <Form.Item name=\"observation\" label={t(\"description\")}>\n                          <TextArea showCount=\"true\" onResize=\"false\" value={selectedPlan?.observation} />\n                        </Form.Item>\n                      </Col>\n                    </Row>\n                  </div>\n                </TabPane>\n              </Tabs>\n            </>\n          )}\n        </div>\n      </Form>\n    </BaseModal>\n  );\n};\n\nManagePlanLinkModal.defaultProps = {\n  setPlanId: () => {},\n};\n\nexport default ManagePlanLinkModal;\n"]},"metadata":{},"sourceType":"module"}